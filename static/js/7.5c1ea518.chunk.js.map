{"version":3,"sources":["images/freshBank/nft/modalClose_icon.svg","images/freshBank/nft/goLink_icon.svg","images/freshBank/nft/legendary_icon.svg","images/freshBank/nft/epic_icon.svg","images/freshBank/nft/normal_icon.svg","images/freshBank/nft/warn_icon.svg","images/freshBank/nft/galleryPic1.gif","images/freshBank/nft/galleryPic2.gif","images/freshBank/nft/galleryPic3.gif","images/freshBank/nft/arrow_icon.svg","images/freshBank/nft/goLinkBlack_icon.svg","images/freshBank/nft/goLinkWhite_icon.svg","images/freshBank/nft/arrow_white_icon.svg","images/freshBank/nft/warning_icon.svg","pages/nftV2/nft.module.scss","images/freshBank/nft/torchlight.gif","images/freshBank/nft/add_icon.svg","pages/nftV2/BorderedContainer/BorderedContainer.module.scss","components/infiniteList/InfiniteList.module.scss","pages/nftV2/nftData.js","pages/nftV2/nonWhitelistModal.js","pages/nftV2/galleryIntroModal.js","pages/nftV2/NftBurnModal.js","pages/nftV2/NFTController.js","pages/nftV2/BorderedContainer/BorderedContainer.js","pages/nftV2/NftForgeModal.js","components/infiniteList/InfiniteList.js","pages/nftV2/nft.js"],"names":["module","exports","NFTLevel","Rare","Epic","Legendary","galleryData","pcs","tag","Object","keys","rewards","StepStatus","past","now","waiting","steps","startTime","stopTime","startBoost","Date","stopBoost","initMultiplier","recordsData","map","step","index","round","time","getMonth","getDate","parseInt","boostTime","reward","gt","globalUtils","zero","actionStatus","status","NonWhitelistModal","props","styles","useTranslation","t","i18n","Modal","show","onHide","handleClose","className","classNames","nftModal","whitelistModal","centered","Body","bodyContainer","bodyBg","bodyStoke","hd","title","close","onClick","src","modalClose_icon","bodyContent","warn_icon","failed","tipsWrap","showMojitoSwap","ft","href","target","goLinkBlack_icon","GalleryIntroModal","networkType","useContext","NetworkTypeContext","galleryIntroModal","data","infoWrap","addressWrap","address","Config","torchlight","featuresWrap","featureList","featureItem","itemHd","num","commonTag","legendaryTag","legendaryIcon","epicTag","epicIcon","normalTag","normalIcon","topRewards","howManyToBurn","Map","BurnPanel","key","useState","panelStyle","setPanelStyle","icon","setIcon","label","setLabel","value","setValue","useEffect","picYellowWrap","picPurpleWrap","picNormalWrap","getValue","burnItem","picWrap","burnCalc","event","newValue","sub","disabled","type","min","max","length","readOnly","maxValue","add","burned","NftBurnModal","WalletAddressContext","connectedAddress","multiplier","setMultiplier","countNFTtoBurn","setCountNFTtoBurn","set","mul","boostMultiplier","tempCount","Array","from","nft","item","Math","pow","nftBurnModal","boosMultiWrap","bmTitle","numChange","oldNum","toLocaleString","maximumFractionDigits","arrowWhiteIcon","newNum","toFixed","burnList","burnTips","warning_icon","handleBurn","NFTController","_NFTContract","_web3","_networkType","config","headerConfigData","network","kcc","chainAsKey","_account","_tokenIDs","_tokenURIs","_tokenJSON","_steps","_now","_tryCountForSynthesizer","nftForged","init","web3","this","formatSteps","_getAirdrop","verifyWhitelist","_getNFTContract","methods","call","mint","callback","revertCallback","_runContractMethod","multiBurn","arrayToBurn","func","burn","calls","push","encodeABI","multicall","getTokenIDs","owner","balanceOf","all","IDs","i","tokenOfOwnerByIndex","getBurnLog","getNFTsBurned","log","logTime","id","computeAllBoostMultiplier","computeBoostMultiplier","indexOfSteps","j","fetch","baseURI","json","result","attributes","findIndex","console","error","fetchURIs","balance","tokenURI","fetchSingleTokenJson","token","tokenID","warn","fetchTokenJson","tokens","sorted","has","groupNFTsByLevel","NFTs","groupBy","indexOfNFT","String","get","uri","getPastMintEvent","getPastEvents","fromBlock","deployAt","toBlock","LiteralBlockNumber","LATEST","topics","transfer","ZERO_32","replace","HEXSTRING_PREFIX","ADDRESS32_PREFIX","isApprovedForAll","forge","setApprovalForAll","args","hashCallback","loadABI","ABI","abi","contract","eth","Contract","synthesize","detectSynthesizerAPI","delay","hash","setTimeout","window","requestIdleCallback","synthesizer","res","tokenId","attribute","timeout","getForgingLogs","howManyLogs","forgingLogsAPI","tempLogs","filter","level","concat","slice","airdropAPI","method","mode","headers","body","JSON","stringify","account","code","BigNumber","mintBalance","options","send","on","confirmationNumber","receipt","BorderTop","width","viewBox","fill","xmlns","d","stroke","strokeWidth","BorderBottom","BorderedContainer","borderedContainer","titleBar","forgeBG","titleBarContent","contentContainer","children","footBar","NftForgeModal","showForgingPanel","showForgingDone","modalHeader2","modalTips","rarity","showForgingError","showForgingCannot","com","forgeStatus","ForgeStatus","DONE","ERROR","CANNOT","showContent","style","marginTop","buy","infiniteListTimer","infiniteListStartTop","infiniteListContainer","infiniteListContent","InfiniteListItemHeight","InfiniteList","scorll","content","top","offsetHeight","r","childNodes","cloneNode","appendChild","contentWithoutTransation","removeChild","destroyTimer","clearInterval","scroll","document","getElementById","setInterval","interval","infiniteListLayout","NFT","language","LanguageContext","Web3Context","readonlyWeb3","hecoMainNetWeb3","WalletModalContext","setConnectWalletModalShow","connectWalletModalShow","nowDate","setNowDate","day","setDay","hour","setHour","minute","setMinute","second","setSecond","expandStatus","setExpandStatus","isWhitelist","setIsWhitelist","mintFinished","setMintFinished","setShowMojitoSwap","showMintFailedModal","setShowMintFailedModal","showGalleryIntroModal","setShowGalleryIntroModal","showNftBurnModal","setShowNftBurnModal","showNftForgeModal","setShowNftForgeModal","forging","setForging","IDLE","setForgeStatus","galleryModalData","setGalleryModalData","setTokenIDs","setBalanceOf","countMinted","setCountMinted","setNFTs","groupedNFTs","setGroupedNFTs","mintSuccess","setMintSuccess","mintFailed","setMintFailed","countWhiteList","setCountWhiteList","roundToBoost","setRoundToBoost","records","setRecords","forgingLogsToShow","setForgingLogsToShow","endDate","getTime","buyMojitoSwapDate","countDownTimer","isWhitelistUser","forgingLogs","NA","fetchJSON","location","scrollToAnchor","countDownFn","diffTime","countDownSeconds","floor","toString","padStart","isConnectWallet","toLowerCase","count","handleMint","handleAddWallet","tokenAddress","tokenSymbol","symbol","ethereum","request","params","decimals","image","anchorName","anchorElement","scrollIntoView","block","behavior","handleConnectWallet","renderMint","renderWhiteListDesc","Trans","i18nKey","desc1","values","howMany","BorderedContainerTitleBarContent","fontSize","buyMore","goLinkIcon","handleForge","forgeFunc","tempArrayToForge","splice","er","re","renderForge","wireWrap","wire","forgeContainer","inner","galleryInner","titleWrap","titleStroke","forgeLayout","notificationBar","split","subContainer","recentlyForge","display","justifyContent","alignItems","height","Loading","alt","list","forgingLog","listItem","accountLabel","truncateMiddle","operator","itemLabel","launch","btnAction","normal","handleBoost","currentTarget","renderRecordsRow","mobilTableRound","mobilTableTh","end","toNumber","useGrouping","onBoosting","getActionTitle","colSpan","alignCenter","Spinner","animation","variant","size","nftContainer","countDownContainer","sloganBg","slogan","stage","stage2","desc","stage1","dountDown","colon","container","roadMapAndAboutContainer","roadMapContainer","roadMapList","line","roadMapData","roadMapItem","circle","subjectWrap","subject","subjectTime","aboutContainer","aboutIntroContainer","introWrap","picInner","mintTipsContainer","mintTipsInner","mintTips","txtWrap","amount","paragraph","torchlightAddWallet","add_icon","galleryContainer","listWrap","owned","group","countByLevel","itemWrapOuter","itemWrapOuterPurple","itemWrapOuterBlue","itemWrapOuterGreen","itemWrapOuterGrey","itemWrap","itemWrapInner","ownedNum","galleryPicWrap","galleryPic","galleryPic1","galleryPic2","galleryPic3","notOwned","itemInfo","tagWrap","intro","arrowIcon","stage2Container","topRewardsContainer","topRewardsInner","tipsContainer","joinTopWrap","tipsTitle","tutorial","joinTopList","joinTopItemOuter","joinTopItem","joinTopItemYellow","tips","verticalLine1","verticalLine2","sNum","joinTopItemGreen","joinTopItemBlue","calMultWrap","calMultList","calMultItemOuter","calMultItemOuterGreen","lowerBg","numGreen","calMultItem","line1","line2","shortLine1","shortLine2","txt","calMultItemOuterYellow","numYellow","recordsContainer","recordsTitle","recordsTableOuter","recordsTable","FaqContainer","FaqInner","faqList","faqListData","faqItem","newExpand","faqExpandHandle","AiOutlineMinus","AiOutlinePlus","Collapse","in","viewFaq","mapToBurn","reload","forgeResult","showMs","onClose"],"mappings":"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","file":"static/js/7.5c1ea518.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/modalClose_icon.1b7d33d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/goLink_icon.e6e138c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/legendary_icon.423ed5fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/epic_icon.effe5706.svg\";","module.exports = __webpack_public_path__ + \"static/media/normal_icon.24c881e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/warn_icon.0f68e77d.svg\";","module.exports = __webpack_public_path__ + \"static/media/galleryPic1.d139af8c.gif\";","module.exports = __webpack_public_path__ + \"static/media/galleryPic2.3e2390eb.gif\";","module.exports = __webpack_public_path__ + \"static/media/galleryPic3.b49ee052.gif\";","module.exports = __webpack_public_path__ + \"static/media/arrow_icon.1ca1c122.svg\";","module.exports = __webpack_public_path__ + \"static/media/goLinkBlack_icon.df5eb0ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/goLinkWhite_icon.a7c8e510.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow_white_icon.63929262.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning_icon.9b418a36.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalHeader2\":\"nft_modalHeader2__1ObuP\",\"modalTips\":\"nft_modalTips__3hFjr\",\"pcs\":\"nft_pcs__1jcjo\",\"commonTag\":\"nft_commonTag__O-siA\",\"legendaryTag\":\"nft_legendaryTag__3hGC7\",\"epicTag\":\"nft_epicTag__3eQbM\",\"normalTag\":\"nft_normalTag__3gGvf\",\"topRewards\":\"nft_topRewards__2h-8Y\",\"BorderedContainerTitleBarContent\":\"nft_BorderedContainerTitleBarContent__OwbHv\",\"title\":\"nft_title__2DLwa\",\"buyMore\":\"nft_buyMore__NbiVM\",\"nftContainer\":\"nft_nftContainer__3YG8m\",\"inner\":\"nft_inner__2sSON\",\"wireWrap\":\"nft_wireWrap___JWSE\",\"wire\":\"nft_wire__1zKRU\",\"titleWrap\":\"nft_titleWrap__yulV2\",\"titleStroke\":\"nft_titleStroke__1DeWU\",\"mint\":\"nft_mint__dS3f1\",\"container\":\"nft_container__33Ob2\",\"countDownContainer\":\"nft_countDownContainer__3gKzc\",\"sloganBg\":\"nft_sloganBg__3E17z\",\"slogan\":\"nft_slogan__27t_T\",\"stage\":\"nft_stage__EUF_t\",\"desc\":\"nft_desc__Ymw1V\",\"desc1\":\"nft_desc1__fD13M\",\"dountDown\":\"nft_dountDown__i_7ij\",\"colon\":\"nft_colon__33p9t\",\"roadMapAndAboutContainer\":\"nft_roadMapAndAboutContainer__ANWfQ\",\"roadMapContainer\":\"nft_roadMapContainer__1o7Xw\",\"roadMapList\":\"nft_roadMapList__1JKI8\",\"line\":\"nft_line__37-sb\",\"roadMapItem\":\"nft_roadMapItem__S02JY\",\"circle\":\"nft_circle__XCTW0\",\"subjectWrap\":\"nft_subjectWrap__vpS00\",\"subject\":\"nft_subject__27hU8\",\"subjectTime\":\"nft_subjectTime__2t39W\",\"aboutContainer\":\"nft_aboutContainer__3GJQ0\",\"aboutIntroContainer\":\"nft_aboutIntroContainer__1kfwq\",\"introWrap\":\"nft_introWrap__2vwcm\",\"picWrap\":\"nft_picWrap__26roG\",\"picInner\":\"nft_picInner__2M9pJ\",\"mintTipsContainer\":\"nft_mintTipsContainer___prHO\",\"mintTipsInner\":\"nft_mintTipsInner__3GcUC\",\"mintTips\":\"nft_mintTips__2iXAx\",\"txtWrap\":\"nft_txtWrap__36nVC\",\"paragraph\":\"nft_paragraph__1NdGA\",\"torchlightAddWallet\":\"nft_torchlightAddWallet__2By8q\",\"forgeContainer\":\"nft_forgeContainer__1gUIS\",\"forgeLayout\":\"nft_forgeLayout__3G9Lw\",\"notificationBar\":\"nft_notificationBar__3gqSa\",\"split\":\"nft_split__1aAMQ\",\"contentContainer\":\"nft_contentContainer__2hN91\",\"subContainer\":\"nft_subContainer__2ZRj7\",\"launch\":\"nft_launch__28m8_\",\"recentlyForge\":\"nft_recentlyForge__fk45d\",\"list\":\"nft_list__2W1oU\",\"listItem\":\"nft_listItem__FiVxw\",\"accountLabel\":\"nft_accountLabel__2etMi\",\"itemLabel\":\"nft_itemLabel__3-DD0\",\"galleryContainer\":\"nft_galleryContainer__3RRxQ\",\"galleryInner\":\"nft_galleryInner__3LcH3\",\"buy\":\"nft_buy__2rMwi\",\"listWrap\":\"nft_listWrap__-dBOd\",\"itemWrapOuter\":\"nft_itemWrapOuter__bbP1t\",\"itemWrapOuterPurple\":\"nft_itemWrapOuterPurple__19g0Q\",\"itemWrap\":\"nft_itemWrap__2DLdH\",\"itemWrapOuterBlue\":\"nft_itemWrapOuterBlue__2vrSR\",\"itemWrapOuterGreen\":\"nft_itemWrapOuterGreen__Tp7Xf\",\"itemWrapOuterGrey\":\"nft_itemWrapOuterGrey__3ijb7\",\"ownedNum\":\"nft_ownedNum__zE-zm\",\"notOwned\":\"nft_notOwned__1pNA0\",\"galleryPic\":\"nft_galleryPic__1JxW4\",\"itemWrapInner\":\"nft_itemWrapInner__3dX4q\",\"galleryPicWrap\":\"nft_galleryPicWrap__26VoG\",\"itemInfo\":\"nft_itemInfo__1Y4Ov\",\"tagWrap\":\"nft_tagWrap__3Z0q9\",\"intro\":\"nft_intro__29jPO\",\"FaqContainer\":\"nft_FaqContainer__2mzId\",\"FaqInner\":\"nft_FaqInner__Yy5Ar\",\"faqList\":\"nft_faqList__2x4Ld\",\"faqItem\":\"nft_faqItem__3urnm\",\"viewFaq\":\"nft_viewFaq__2R8AC\",\"stage2Container\":\"nft_stage2Container__3qpQp\",\"topRewardsContainer\":\"nft_topRewardsContainer__PSY_P\",\"topRewardsInner\":\"nft_topRewardsInner__2LwPn\",\"tipsContainer\":\"nft_tipsContainer__2EVGA\",\"tipsWrap\":\"nft_tipsWrap__-MbsB\",\"tipsTitle\":\"nft_tipsTitle__qW74M\",\"tutorial\":\"nft_tutorial__1ikE7\",\"joinTopWrap\":\"nft_joinTopWrap__w1sif\",\"joinTopList\":\"nft_joinTopList__3lxH4\",\"joinTopItemOuter\":\"nft_joinTopItemOuter__2FPZQ\",\"joinTopItem\":\"nft_joinTopItem__2qtoq\",\"joinTopItemYellow\":\"nft_joinTopItemYellow__3ssBX\",\"joinTopItemGreen\":\"nft_joinTopItemGreen__1BTfp\",\"joinTopItemBlue\":\"nft_joinTopItemBlue__23yVT\",\"verticalLine1\":\"nft_verticalLine1__1_8Go\",\"verticalLine2\":\"nft_verticalLine2__3UZKq\",\"num\":\"nft_num__7Q38X\",\"tips\":\"nft_tips__3UeNw\",\"sNum\":\"nft_sNum__38Bxr\",\"calMultWrap\":\"nft_calMultWrap__NfLlr\",\"calMultList\":\"nft_calMultList__FH0Es\",\"calMultItemOuter\":\"nft_calMultItemOuter__1xiHB\",\"calMultItem\":\"nft_calMultItem__N4GRu\",\"line1\":\"nft_line1__hv4D_\",\"line2\":\"nft_line2__5fFty\",\"shortLine1\":\"nft_shortLine1__3Bk2H\",\"shortLine2\":\"nft_shortLine2__23gxR\",\"txt\":\"nft_txt__3fdg-\",\"numGreen\":\"nft_numGreen__oB8Ie\",\"numYellow\":\"nft_numYellow__mvzXF\",\"lowerBg\":\"nft_lowerBg__mAlmb\",\"calMultItemOuterGreen\":\"nft_calMultItemOuterGreen__2HzKd\",\"calMultItemOuterYellow\":\"nft_calMultItemOuterYellow__1zv2H\",\"recordsContainer\":\"nft_recordsContainer__2tC-N\",\"recordsTitle\":\"nft_recordsTitle__2378j\",\"recordsTableOuter\":\"nft_recordsTableOuter__3N0TV\",\"recordsTable\":\"nft_recordsTable__1rCv_\",\"mobilTableRound\":\"nft_mobilTableRound__EiZI7\",\"mobilTableTh\":\"nft_mobilTableTh__2nfFR\",\"end\":\"nft_end___pSWJ\",\"btnAction\":\"nft_btnAction__1_ElX\",\"normal\":\"nft_normal__3ItlZ\",\"now\":\"nft_now__31KSY\",\"onBoosting\":\"nft_onBoosting__2hagW\",\"past\":\"nft_past__37cV0\",\"waiting\":\"nft_waiting__2cqAy\",\"nftModal\":\"nft_nftModal__3LI-S\",\"bodyContainer\":\"nft_bodyContainer__VMTBF\",\"bodyBg\":\"nft_bodyBg__18MSp\",\"bodyStoke\":\"nft_bodyStoke__2393d\",\"hd\":\"nft_hd__DNFkr\",\"close\":\"nft_close__2pJ3i\",\"ft\":\"nft_ft__GWoF6\",\"bodyContent\":\"nft_bodyContent__35opO\",\"whitelistModal\":\"nft_whitelistModal__2HDyi\",\"failed\":\"nft_failed__2mEV7\",\"galleryIntroModal\":\"nft_galleryIntroModal__2UPJW\",\"infoWrap\":\"nft_infoWrap__JpRqD\",\"addressWrap\":\"nft_addressWrap__1BCEl\",\"address\":\"nft_address__3oRQc\",\"featuresWrap\":\"nft_featuresWrap__1KC0g\",\"featureList\":\"nft_featureList__TCHtI\",\"featureItem\":\"nft_featureItem__2c7qc\",\"itemHd\":\"nft_itemHd__2tyrH\",\"nftBurnModal\":\"nft_nftBurnModal__1IgYw\",\"boosMultiWrap\":\"nft_boosMultiWrap__1OLXL\",\"bmTitle\":\"nft_bmTitle__2kyIM\",\"numChange\":\"nft_numChange__2K55O\",\"oldNum\":\"nft_oldNum__1Wt-M\",\"newNum\":\"nft_newNum__eHBsn\",\"burnList\":\"nft_burnList__2Zap7\",\"burnItem\":\"nft_burnItem__3MmUO\",\"picYellowWrap\":\"nft_picYellowWrap__2hLWY\",\"picPurpleWrap\":\"nft_picPurpleWrap__3xjfY\",\"picNormalWrap\":\"nft_picNormalWrap__qfABV\",\"burnCalc\":\"nft_burnCalc__nuqy_\",\"sub\":\"nft_sub___GJei\",\"add\":\"nft_add__QQEcn\",\"disabled\":\"nft_disabled__3iPFg\",\"burnTips\":\"nft_burnTips__2Rumg\",\"alignCenter\":\"nft_alignCenter__iJ_Rn\",\"pic\":\"nft_pic__1wXqR\"};","module.exports = __webpack_public_path__ + \"static/media/torchlight.82731dd5.gif\";","module.exports = __webpack_public_path__ + \"static/media/add_icon.f6aa6362.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderedContainer\":\"BorderedContainer_borderedContainer__AManv\",\"titleBar\":\"BorderedContainer_titleBar__3Zf3O\",\"forgeBG\":\"BorderedContainer_forgeBG__2Uhi5\",\"content\":\"BorderedContainer_content__3onqm\",\"title\":\"BorderedContainer_title__2le_5\",\"buyMore\":\"BorderedContainer_buyMore__XeF_U\",\"contentContainer\":\"BorderedContainer_contentContainer__3rx8f\",\"footBar\":\"BorderedContainer_footBar__1vEBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infiniteListLayout\":\"InfiniteList_infiniteListLayout__20wKw\",\"content\":\"InfiniteList_content__3n180\",\"contentWithoutTransation\":\"InfiniteList_contentWithoutTransation__3uiLP\"};","import { globalUtils } from \"../../utils/globalUtils\"\n\nexport const roadMapData = (t) => {\n  return [\n    {\n      title: t('NFT.RoadMap-1-title'),\n      time: '06.29-07.08'\n    },\n    {\n      title: t('NFT.RoadMap-2-title'),\n      time: '07.09-07.15'\n    },\n    {\n      title: t('NFT.RoadMap-3-title'),\n      time: '07.11'\n    },\n    {\n      title: t('NFT.RoadMap-4-title'),\n      time: '07.15'\n    },\n    {\n      title: t('NFT.RoadMap-5-title'),\n      time: '07.18'\n    }\n  ]\n}\n\nexport const faqListData = (t) => {\n  return [\n    {\n      title: t('NFT.FAQ_q1'),\n      content: t('NFT.FAQ_a1')\n    },\n    {\n      title: t('NFT.FAQ_q2'),\n      content: t('NFT.FAQ_a2')\n    },\n    {\n      title: t('NFT.FAQ_q3'),\n      content: t('NFT.FAQ_a3')\n    },\n    {\n      title: t('NFT.FAQ_q4'),\n      content: t('NFT.FAQ_a4')\n    }\n  ]\n}\n\nexport const NFTLevel = {\n  Rare: 1,\n  Epic: 2,\n  Legendary: 3\n};\n\nexport const galleryData = [\n  {\n    pcs: 100,\n    tag: Object.keys(NFTLevel)[2],\n    rewards: 1.5\n  },\n  {\n    pcs: 900,\n    tag: Object.keys(NFTLevel)[1],\n    rewards: 1.3\n  },\n  {\n    pcs: 9000,\n    tag: Object.keys(NFTLevel)[0],\n    rewards: 1.1\n  }\n]\n\nexport const StepStatus = {\n  past: 0,\n  now: 1,\n  waiting: 2\n};\n\nexport const steps = [\n  {\n    startTime: \"2022-07-15T10:00:00.000Z\",\n    stopTime: \"2022-07-18T00:00:00.000Z\",\n    startBoost: new Date(\"2022-07-18T00:00:00.000Z\"),\n    stopBoost: new Date(\"2022-07-29T15:59:59.999Z\"),\n    initMultiplier: 1\n  },\n  {\n    startTime: \"2022-07-18T00:00:00.000Z\",\n    stopTime: \"2022-07-30T00:00:00.000Z\",\n    startBoost: new Date(\"2022-07-30T00:00:00.000Z\"),\n    stopBoost: new Date(\"2022-08-10T15:59:59.999Z\"),\n    initMultiplier: 1\n  },\n  {\n    startTime: \"2022-07-30T00:00:00.000Z\",\n    stopTime: \"2022-08-11T00:00:00.000Z\",\n    startBoost: new Date(\"2022-08-11T00:00:00.000Z\"),\n    stopBoost: new Date(\"2022-08-22T15:59:59.999Z\"),\n    initMultiplier: 1\n  },\n  {\n    startTime: \"2022-08-11T00:00:00.000Z\",\n    stopTime: \"2022-08-23T00:00:00.000Z\",\n    startBoost: new Date(\"2022-08-23T00:00:00.000Z\"),\n    stopBoost: new Date(\"2022-09-03T15:59:59.999Z\"),\n    initMultiplier: 1\n  },\n  {\n    startTime: \"2022-08-23T00:00:00.000Z\",\n    stopTime: \"2022-09-04T00:00:00.000Z\",\n    startBoost: new Date(\"2022-09-04T00:00:00.000Z\"),\n    stopBoost: new Date(\"2022-09-15T15:59:59.999Z\"),\n    initMultiplier: 1\n  }\n];\n\nexport const recordsData = () => {\n  const keys = Object.keys(StepStatus);\n  steps.map((step, index) => {\n    step.round = index + 1;\n    step.time = step.startTime.getMonth() + 1 + \".\" + step.startTime.getDate() + \" - \" + (parseInt(step.stopTime.getMonth()) + 1) + \".\" + step.stopTime.getDate();\n    step.boostTime = step.startBoost.getMonth() + 1 + \".\" + step.startBoost.getDate() + \" - \" + (parseInt(step.stopBoost.getMonth()) + 1) + \".\" + step.stopBoost.getDate();\n    step.reward = step.reward?.gt(0) ? step.reward : globalUtils.zero;\n    step.actionStatus = keys[step.status];\n  });\n  return steps;\n}","import React, {useContext, useState} from 'react'\nimport classNames from 'classnames'\nimport { Container, Collapse, Modal } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { WalletAddressContext, NetworkTypeContext, Web3Context, ReadonlyWeb3Context } from '../../context'\nimport modalClose_icon from '../../images/freshBank/nft/modalClose_icon.svg'\nimport warn_icon from '../../images/freshBank/nft/warn_icon.svg'\nimport goLinkBlack_icon from '../../images/freshBank/nft/goLinkBlack_icon.svg'\n\n\nconst NonWhitelistModal = (props) => {\n  const styles = props.styles\n  const { t, i18n } = useTranslation()\n  return (\n    <Modal\n      show={props.show}\n      onHide={props.handleClose}\n      className={classNames(styles.nftModal, styles.whitelistModal)}\n      centered\n    >\n    <Modal.Body>\n      <div className={classNames(styles.bodyContainer)}>\n        <div className={classNames(styles.bodyBg)}>\n          <div className={styles.bodyStoke}>\n            <div className={styles.hd}>\n              <span className={styles.title}>{t('NonWhitelistModal.Torchlight')}</span>\n              <div className={styles.close} onClick={props.handleClose}>\n                <img src={modalClose_icon} />\n              </div>\n            </div>\n            <div className={styles.bodyContent}>\n              <img src={warn_icon} />\n              <div className={styles.failed}>{t('NonWhitelistModal.MintFailed')}</div>\n              <div className={styles.tipsWrap}>\n                <p>{t('NonWhitelistModal.MintFailed-desc1')}</p>\n                <p>{t('NonWhitelistModal.MintFailed-desc2')}</p>\n              </div>\n            </div>\n            {/* 7.11开启 */}\n            {\n              props.showMojitoSwap && (\n                <div className={styles.ft}>\n                  <a href=\"https://app.mojitoswap.finance/nfts/collections/0x6d6a72741E3A413B98fEbB4D328eE86093eD7CE0\" target=\"_blank\">\n                    <span>{t('NFT.BuyOnMojitoSwap')}</span>\n                    <img src={goLinkBlack_icon}/>\n                  </a>\n                </div>\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </Modal.Body>\n    </Modal>\n  )\n}\n\n\n\nexport default NonWhitelistModal","import React, {useContext, useState} from 'react'\nimport classNames from 'classnames'\nimport { Container, Collapse, Modal } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { WalletAddressContext, NetworkTypeContext, Web3Context, ReadonlyWeb3Context } from '../../context'\nimport Config from '../../utils/config';\nimport modalClose_icon from '../../images/freshBank/nft/modalClose_icon.svg'\nimport goLinkWhite_icon from '../../images/freshBank/nft/goLinkWhite_icon.svg'\nimport legendaryIcon from '../../images/freshBank/nft/legendary_icon.svg'\nimport epicIcon from '../../images/freshBank/nft/epic_icon.svg'\nimport normalIcon from '../../images/freshBank/nft/normal_icon.svg'\n\n\nconst GalleryIntroModal = (props) => {\n  const styles = props.styles\n  const { t, i18n } = useTranslation()\n  const { networkType } = useContext(NetworkTypeContext)\n\n  return (\n    <Modal\n      show={props.show}\n      onHide={props.handleClose}\n      className={classNames(styles.nftModal, styles.galleryIntroModal)}\n      centered\n    >\n    <Modal.Body>\n      <div className={classNames(styles.bodyContainer)}>\n        <div className={classNames(styles.bodyBg)}>\n          <div className={styles.bodyStoke}>\n            <div className={styles.hd}>\n              <span className={styles.title}>\n                {t('GalleryIntroModal.Torchlight', {\n                  tag: props.data.tag === 'Legendary' ? t('NFT.Legendary') : props.data.tag === 'Epic' ? t('NFT.Epic') : props.data.tag === 'Normal' ? t('NFT.Normal') : ''\n                })}\n              </span>\n              <div className={styles.close} onClick={props.handleClose}>\n                <img src={modalClose_icon} />\n              </div>\n            </div>\n            <div className={styles.bodyContent}>\n             <div className={classNames(styles.infoWrap, styles.addressWrap)}>\n               <div className={styles.title}>{t('GalleryIntroModal.ContractAddress')}</div>\n               <div className={styles.address}>\n                 <span>{Config.torchlight.address[networkType]}</span>\n                 {/* <img src={goLinkWhite_icon}/> */}\n               </div>\n             </div>\n             <div className={classNames(styles.infoWrap, styles.featuresWrap)}>\n               <div className={styles.title}>{t('GalleryIntroModal.Features')}</div>\n               <div className={styles.featureList}>\n                 <div className={styles.featureItem}>\n                   <div className={styles.itemHd}>{t('GalleryIntroModal.TotalAmount')}</div>\n                   <div className={styles.pcs}>{t('NFT.Pcs', {num: props.data.pcs})}</div>\n                 </div>\n                 <div className={styles.featureItem}>\n                   <div className={styles.itemHd}>{t('GalleryIntroModal.Level')}</div>\n                   {\n                      props.data.tag === 'Legendary' ? (\n                        <div className={classNames(styles.commonTag, styles.legendaryTag)}>\n                          <img src={legendaryIcon}/>\n                          <span>{t('NFT.Legendary')}</span>\n                        </div>\n                      ) : props.data.tag === 'Epic' ? (\n                        <div className={classNames(styles.commonTag, styles.epicTag)}>\n                          <img src={epicIcon}/>\n                          <span>{t('NFT.Epic')}</span>\n                        </div>\n                      ) : props.data.tag === 'Rare' ? (\n                        <div className={classNames(styles.commonTag, styles.normalTag)}>\n                          <img src={normalIcon}/>\n                          <span>{t('NFT.Normal')}</span>\n                        </div>\n                      ) : ''\n                    }\n                 </div>\n                 <div className={styles.featureItem}>\n                    <div className={styles.itemHd}>{t('GalleryIntroModal.Benefit')}</div>\n                    <div className={styles.topRewards}>\n                      {t('NFT.xTopRewards', {\n                        rewards: props.data.rewards\n                      })}\n                    </div>\n                 </div>\n               </div>\n             </div>\n            </div>\n            <div className={styles.ft}>\n              <button onClick={props.handleClose}>\n                OK\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal.Body>\n    </Modal>\n  )\n}\n\n\n\nexport default GalleryIntroModal","import React, { useContext, useEffect, useState } from 'react'\nimport classNames from 'classnames'\nimport { Container, Collapse, Modal } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport { WalletAddressContext, NetworkTypeContext, Web3Context, ReadonlyWeb3Context } from '../../context'\nimport modalClose_icon from '../../images/freshBank/nft/modalClose_icon.svg'\nimport legendaryIcon from '../../images/freshBank/nft/legendary_icon.svg'\nimport epicIcon from '../../images/freshBank/nft/epic_icon.svg'\nimport normalIcon from '../../images/freshBank/nft/normal_icon.svg'\nimport arrowWhiteIcon from '../../images/freshBank/nft/arrow_white_icon.svg'\nimport warning_icon from '../../images/freshBank/nft/warning_icon.svg'\nimport { galleryData, steps } from './nftData'\n\nconst howManyToBurn = new Map();\n\nconst BurnPanel = props => {\n  const key = props.title;\n  const styles = props.styles;\n  const t = props.t;\n\n  const [panelStyle, setPanelStyle] = useState(\"\");\n  const [icon, setIcon] = useState(null);\n  const [label, setLabel] = useState(\"\");\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    switch (key) {\n      case \"Legendary\":\n        setPanelStyle(styles.picYellowWrap);\n        setIcon(legendaryIcon);\n        setLabel(t('NFT.Legendary'));\n        break;\n\n      case \"Epic\":\n        setPanelStyle(styles.picPurpleWrap);\n        setIcon(epicIcon);\n        setLabel(t('NFT.Epic'));\n        break;\n\n      default:\n        setPanelStyle(styles.picNormalWrap);\n        setIcon(normalIcon);\n        setLabel(t('NFT.Normal'));\n        break;\n    }\n  }, []);\n\n  useEffect(() => {\n    props.getValue(key, value);\n  }, [value]);\n\n  const handleAdd = event => {\n    const maxValue = props.data[key]?.length;\n    const newValue = value + 1;\n    if (newValue <= maxValue) {\n      setValue(newValue);\n    }\n  };\n\n  const handleMinus = event => {\n    const newValue = value - 1;\n    if (newValue >= 0) {\n      setValue(newValue);\n    }\n  };\n\n  return (<div className={styles.burnItem}>\n    <div className={classNames(styles.picWrap, panelStyle)}>\n      <img src={icon} />\n      <span>{label}</span>\n    </div>\n\n    <div className={styles.burnCalc}>\n      <span\n        onClick={handleMinus}\n        className={classNames(styles.sub, {\n          [styles.disabled]: value <= 0\n        })} />\n\n      <input\n        type=\"number\"\n        min={0}\n        max={props.data[key]?.length}\n        step={1}\n        value={value}\n        readOnly />\n\n      <span\n        onClick={handleAdd}\n        className={classNames(styles.add, {\n          [styles.disabled]: !props.data[key] || value >= props.data[key]?.length || (props.round.burned?.length + value) >= 2\n        })} />\n    </div>\n  </div>)\n};\n\nconst NftBurnModal = (props) => {\n  const styles = props.styles\n  const { t, i18n } = useTranslation()\n  const { connectedAddress } = useContext(WalletAddressContext);\n  const [multiplier, setMultiplier] = useState(1);\n  const [countNFTtoBurn, setCountNFTtoBurn] = useState(0);\n\n  const burnHandle = () => {\n    props.handleBurn(howManyToBurn);\n    props.handleClose()\n  }\n\n  const getValue = (key, value) => {\n    howManyToBurn.set(key, value);\n\n    let mul = steps[props.round.round - 1].boostMultiplier ?? 1;\n\n    let tempCount = 0;\n    Array.from(howManyToBurn).map(nft => {\n      tempCount += nft[1];\n\n      galleryData.map(item => {\n        if (item.tag === nft[0]) {\n          mul *= Math.pow(item.rewards, nft[1]);\n        }\n      });\n    });\n\n    setCountNFTtoBurn(tempCount);\n    setMultiplier(mul);\n  };\n\n  // render UI\n  return (\n    <Modal\n      show={props.show}\n      onHide={props.handleClose}\n      className={classNames(styles.nftModal, styles.nftBurnModal)}\n      centered\n    >\n      <Modal.Body>\n        <div className={classNames(styles.bodyContainer)}>\n          <div className={classNames(styles.bodyBg)}>\n            <div className={styles.bodyStoke}>\n              <div className={styles.hd}>\n                <span className={styles.title}>{t('NFT.Round')}&nbsp;{props.round.round}</span>\n                <div className={styles.close} onClick={props.handleClose}>\n                  <img src={modalClose_icon} />\n                </div>\n              </div>\n              <div className={styles.bodyContent}>\n                <div className={styles.boosMultiWrap}>\n                  <span className={styles.bmTitle}>{t('NFT.BoostingMultiplier')}</span>\n                  <div className={styles.numChange}>\n                    <span className={styles.oldNum}>{steps[props.round.round - 1].boostMultiplier ? steps[props.round.round - 1].boostMultiplier.toLocaleString(\"en-US\", { maximumFractionDigits: 2 }) : \"1.0\"}X</span>\n\n                    <img src={arrowWhiteIcon} />\n\n                    <span className={styles.newNum}>{multiplier.toFixed(2)}X</span>\n                  </div>\n                </div>\n                <div className={styles.burnList}>\n                  <BurnPanel\n                    round={props.round}\n                    title=\"Legendary\"\n                    data={props.data}\n                    t={t}\n                    getValue={getValue}\n                    styles={styles} />\n\n                  <BurnPanel\n                    round={props.round}\n                    title=\"Epic\"\n                    data={props.data}\n                    t={t}\n                    getValue={getValue}\n                    styles={styles} />\n\n                  <BurnPanel\n                    round={props.round}\n                    title=\"Rare\"\n                    data={props.data}\n                    t={t}\n                    getValue={getValue}\n                    styles={styles} />\n                </div>\n\n                {(countNFTtoBurn + props.round.burned?.length) >= 2 && (<div className={styles.burnTips}>\n                  <img src={warning_icon} />\n                  <span>{t('NftBurnModal.ErrorTips')}</span>\n                </div>)}\n              </div>\n              <div className={styles.ft}>\n                <button\n                  onClick={burnHandle}\n                  disabled={props.round.burned?.length >= 2 || (props.round.burned?.length + countNFTtoBurn) > 2 || countNFTtoBurn <= 0}>\n                  {t('NftBurnModal.Burn')}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\n\n\nexport default NftBurnModal","import { BigNumber } from 'bignumber.js'\nimport { find, findIndex, groupBy, isUndefined, remove, sortBy } from \"lodash-es\";\nimport config from \"../../utils/config\";\nimport { globalUtils } from \"../../utils/globalUtils\";\nimport { steps, StepStatus } from \"./nftData\";\n\nexport const NFTController = {\n\t_NFTContract: null,\n\t_web3: null,\n\t_networkType: config.headerConfigData.network.kcc.chainAsKey,\n\t_account: null,\n\t_tokenIDs: null,\n\t_tokenURIs: null,\n\t_tokenJSON: null,\n\t_steps: null,\n\t_now: new Date(),\n\t_tryCountForSynthesizer: 0,\n\tnftForged: null,\n\n\tinit: async function (web3, networkType, connectedAddress) {\n\t\tthis._web3 = web3;\n\t\tthis._networkType = networkType;\n\t\tthis._account = connectedAddress;\n\t\tthis._tokenIDs = new Map();\n\t\tthis._tokenURIs = new Map();\n\t\tthis._tokenJSON = new Map();\n\n\t\tthis._steps = steps;\n\t\tthis.formatSteps();\n\t\tawait this._getAirdrop();\n\t},\n\n\tverifyWhitelist: async function (address) {\n\t\treturn parseInt(await (await this._getNFTContract()).methods.verifyWhitelist(address).call());\n\t},\n\n\tmint: async function (callback, revertCallback) {\n\t\tthis._runContractMethod(\n\t\t\t(await this._getNFTContract()).methods.mint,\n\t\t\t[],\n\t\t\tcallback,\n\t\t\trevertCallback\n\t\t);\n\t},\n\n\tmultiBurn: async function (arrayToBurn, callback, revertCallback) {\n\t\tlet func = (await this._getNFTContract()).methods.burn;\n\t\tconst calls = []\n\t\tarrayToBurn.map(item => {\n\t\t\tcalls.push(func(item).encodeABI())\n\t\t});\n\n\t\tfunc = (await this._getNFTContract()).methods.multicall;\n\t\tthis._runContractMethod(\n\t\t\tfunc,\n\t\t\t[calls],\n\t\t\tcallback,\n\t\t\trevertCallback\n\t\t);\n\t},\n\n\tgetTokenIDs: async function (owner) {\n\t\tconst all = await this.balanceOf(owner);\n\t\tconst IDs = [];\n\t\tfor (let i = 0; i < all; i++) {\n\t\t\tIDs.push(await this.tokenOfOwnerByIndex(owner, i));\n\t\t}\n\t\treturn IDs;\n\t},\n\n\tbalanceOf: async function (owner) {\n\t\treturn parseInt(await (await this._getNFTContract()).methods.balanceOf(owner).call());\n\t},\n\n\tformatSteps: function () {\n\t\tthis._steps.map(step => {\n\t\t\tstep.startTime = new Date(step.startTime);\n\t\t\tstep.stopTime = new Date(step.stopTime);\n\t\t\tstep.burned = [];\n\t\t\tstep.boostMultiplier = 0;\n\n\t\t\tif (step.stopTime < this._now) {\n\t\t\t\tstep.status = StepStatus.past;\n\t\t\t} else if (step.startTime > this._now) {\n\t\t\t\tstep.status = StepStatus.waiting;\n\t\t\t} else {\n\t\t\t\tstep.status = StepStatus.now;\n\t\t\t}\n\t\t});\n\t},\n\n\tgetBurnLog: async function (owner) {\n\t\treturn await (await this._getNFTContract()).methods.getBurnLog(owner).call();\n\t},\n\n\tgetNFTsBurned: async function () {\n\t\tconst logs = await this.getBurnLog(this._account);\n\t\tlogs.map(log => {\n\t\t\tconst logTime = new Date(parseInt(log[0]) * 1000);\n\t\t\tthis._steps.map(step => {\n\t\t\t\tif (step.startTime < logTime && step.stopTime >= logTime) {\n\t\t\t\t\tstep.burned.push({\n\t\t\t\t\t\tid: parseInt(log[1])\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\tcomputeAllBoostMultiplier: async function () {\n\t\tfor (let i = 0; i < this._steps.length; i++) {\n\t\t\tawait this.computeBoostMultiplier(i);\n\t\t}\n\t},\n\n\tcomputeBoostMultiplier: async function (indexOfSteps) {\n\t\tconst step = this._steps[indexOfSteps];\n\n\t\tif (step.boostMultiplier) {\n\t\t\treturn step.boostMultiplier;\n\t\t}\n\n\t\tfor (let i = 0; i <= indexOfSteps; i++) {\n\t\t\tlet mul = 1;\n\t\t\tfor (let j = 0; j < step.burned.length; j++) {\n\t\t\t\tconst item = step.burned[j];\n\t\t\t\tif (!item.multiplier) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst result = await (await fetch(config.torchlight.baseURI[this._networkType] + item.id)).json();\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\titem.multiplier = result.attributes[findIndex(result.attributes, { \"trait_type\": \"multiplier\" })]?.value ?? 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\titem.multiplier = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\titem.multiplier = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmul *= item.multiplier;\n\t\t\t}\n\n\t\t\tstep.boostMultiplier = step.initMultiplier * mul;\n\n\t\t\tif (i > 0) {\n\t\t\t\tstep.boostMultiplier *= (this._steps[indexOfSteps - 1].boostMultiplier - 1) / 2 + 1;\n\t\t\t}\n\n\t\t}\n\t},\n\n\tfetchURIs: async function (balance) {\n\t\tfor (let i = 0; i < balance; i++) {\n\t\t\tconst id = await this.tokenOfOwnerByIndex(this._account, i);\n\t\t\tif (id >= 0) {\n\t\t\t\tawait this.tokenURI(id);\n\t\t\t}\n\t\t}\n\n\t\treturn new Map(this._tokenURIs);\n\t},\n\n\tfetchSingleTokenJson: async function (token) {\n\t\ttry {\n\t\t\tconst result = await (await fetch(token[1])).json();\n\t\t\tif (result) {\n\t\t\t\tresult.tokenID = token[0];\n\t\t\t\treturn result;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.warn(error);\n\t\t}\n\t},\n\n\tfetchTokenJson: async function (tokens) {\n\t\tconst sorted = [];\n\t\tfor (let item of tokens) {\n\t\t\tsorted.push(item);\n\t\t}\n\n\t\tfor (let i = 0; i < sorted.length; i++) {\n\t\t\tconst item = sorted[i];\n\n\t\t\tif (!this._tokenJSON.has[item[0]]) {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await (await fetch(item[1])).json();\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tresult.tokenID = item[0];\n\t\t\t\t\t\tthis._tokenJSON.set(item[0], result);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.warn(error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._tokenJSON;\n\t},\n\n\tgroupNFTsByLevel: function () {\n\t\tconst NFTs = Array.from(this._tokenJSON, item => item[1]);\n\t\treturn groupBy(NFTs, nft => nft.attributes[0]?.value);\n\t},\n\n\ttokenOfOwnerByIndex: async function (owner, indexOfNFT) {\n\t\tconst key = String(indexOfNFT);\n\n\t\tif (this._tokenIDs.has(key)) {\n\t\t\treturn this._tokenIDs.get(key);\n\t\t}\n\n\t\ttry {\n\t\t\tconst tokenID = await (await this._getNFTContract()).methods.tokenOfOwnerByIndex(owner, indexOfNFT).call();\n\t\t\tthis._tokenIDs.set(key, tokenID);\n\t\t\treturn tokenID;\n\t\t} catch (error) {\n\t\t\tconsole.warn(error);\n\t\t\treturn -1;\n\t\t}\n\t},\n\n\ttokenURI: async function (id) {\n\t\tconst key = String(id);\n\n\t\tif (this._tokenURIs.has(key)) {\n\t\t\treturn this._tokenURIs.get(key);\n\t\t}\n\n\t\ttry {\n\t\t\tconst uri = await (await this._getNFTContract()).methods.tokenURI(id).call();\n\t\t\tthis._tokenURIs.set(key, uri);\n\t\t\treturn uri;\n\t\t} catch (error) {\n\t\t\tconsole.warn(error);\n\t\t}\n\t},\n\n\tgetPastMintEvent: async function () {\n\t\ttry {\n\t\t\treturn (await this._getNFTContract()).getPastEvents(\"allEvents\", {\n\t\t\t\tfromBlock: config.torchlight.deployAt[this._networkType],\n\t\t\t\ttoBlock: globalUtils.LiteralBlockNumber.LATEST,\n\t\t\t\ttopics: [\n\t\t\t\t\tconfig.torchlight.topics.transfer,\n\t\t\t\t\tglobalUtils.ZERO_32,\n\t\t\t\t\tthis._account.replace(globalUtils.HEXSTRING_PREFIX, globalUtils.ADDRESS32_PREFIX)\n\t\t\t\t]\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\treturn [];\n\t\t}\n\t},\n\n\tisApprovedForAll: async function () {\n\t\treturn (await this._getNFTContract()).methods.isApprovedForAll(this._account, config.torchlight.forge[this._networkType].address).call();\n\t},\n\n\tsetApprovalForAll: async function (callback, revertCallback) {\n\t\tthis._runContractMethod(\n\t\t\t(await this._getNFTContract()).methods.setApprovalForAll,\n\t\t\t[config.torchlight.forge[this._networkType].address, true],\n\t\t\tcallback,\n\t\t\trevertCallback\n\t\t);\n\t},\n\n\tforge: async function (args, callback, revertCallback, hashCallback) {\n\t\tconst abi = await globalUtils.loadABI(config.torchlight.forge[this._networkType].ABI);\n\t\tconst contract = new this._web3.eth.Contract(abi, config.torchlight.forge[this._networkType].address);\n\t\tthis._runContractMethod(\n\t\t\tcontract.methods.synthesize,\n\t\t\t[...args],\n\t\t\tcallback,\n\t\t\trevertCallback,\n\t\t\tnull,\n\t\t\thashCallback\n\t\t);\n\t},\n\n\tdetectSynthesizerAPI: function (delay, hash, callback) {\n\t\tsetTimeout(() => {\n\t\t\twindow.requestIdleCallback(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst res = await (await fetch(config.torchlight.synthesizer[this._networkType].replace(\":address\", this._account).replace(\":hash\", hash))).json();\n\t\t\t\t\tif (res.tokenId || this._tryCountForSynthesizer > 10) {\n\t\t\t\t\t\tthis.nftForged = res.attribute[0].value;\n\t\t\t\t\t\treturn callback(res);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._tryCountForSynthesizer++;\n\t\t\t\t\t\treturn this.detectSynthesizerAPI(delay, hash, callback);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn console.error(error);\n\t\t\t\t}\n\t\t\t}, { timeout: delay });\n\t\t}, delay);\n\t},\n\n\tgetForgingLogs: function (callback) {\n\t\twindow.requestIdleCallback(async () => {\n\t\t\tconst howManyLogs = 15;\n\t\t\ttry {\n\t\t\t\tconst res = await (await fetch(config.torchlight.forgingLogsAPI[this._networkType])).json();\n\n\t\t\t\tlet tempLogs;\n\t\t\t\tif (res.length < howManyLogs) {\n\t\t\t\t\treturn callback(res);\n\t\t\t\t} else {\n\t\t\t\t\ttempLogs = res.filter(item => item.level === 3);\n\t\t\t\t}\n\n\t\t\t\tif (tempLogs.length < howManyLogs) {\n\t\t\t\t\ttempLogs = tempLogs.concat(res.filter(item => item.level === 2).slice(0, howManyLogs - tempLogs.length));\n\t\t\t\t}\n\n\t\t\t\tif (tempLogs.length < howManyLogs) {\n\t\t\t\t\ttempLogs = tempLogs.concat(res.filter(item => item.level === 1).slice(0, howManyLogs - tempLogs.length));\n\t\t\t\t}\n\n\t\t\t\tif (res && callback) {\n\t\t\t\t\treturn callback(tempLogs);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn(error);\n\t\t\t}\n\t\t});\n\t},\n\n\t_getAirdrop: async function () {\n\t\tlet res = null;\n\n\t\ttry {\n\t\t\tres = await (await fetch(config.torchlight.airdropAPI, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tmode: 'cors',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify({ account: this._account })\n\t\t\t})).json();\n\t\t} catch (error) {\n\t\t\treturn console.error(error);\n\t\t}\n\n\t\tif (res?.code === 0) {\n\t\t\tres.data.map(item => this._steps[parseInt(item.round) - 1].reward = new BigNumber(item.mintBalance));\n\t\t}\n\t},\n\n\t_getNFTContract: async function () {\n\t\tif (!this._NFTContract) {\n\t\t\tconst abi = await globalUtils.loadABI(config.torchlight.ABI);\n\t\t\tthis._NFTContract = new this._web3.eth.Contract(abi, config.torchlight.address[this._networkType])\n\t\t}\n\n\t\treturn this._NFTContract;\n\t},\n\n\t_runContractMethod: function (func, args, callback, revertCallback, options, hashCallback) {\n\t\treturn func(...args).send({\n\t\t\tfrom: this._account,\n\t\t\t...options\n\t\t}).on('transactionHash', function (hash) {\n\t\t\tif (hashCallback) {\n\t\t\t\treturn hashCallback(hash);\n\t\t\t}\n\t\t}).on('confirmation', function (confirmationNumber, receipt) {\n\t\t\t// \n\t\t}).on('receipt', function (receipt) {\n\t\t\tif (callback) {\n\t\t\t\treturn callback(receipt);\n\t\t\t}\n\t\t}).on('error', function (error, receipt) {\n\t\t\tif (revertCallback) {\n\t\t\t\treturn revertCallback(error, receipt);\n\t\t\t}\n\t\t});\n\t},\n};","import React from \"react\";\nimport styles from \"./BorderedContainer.module.scss\";\n\nconst BorderTop = props => (<svg width=\"100%\" viewBox=\"0 0 1199 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M1 60L1 1L1156.49 1L1198 39.7768L1198 61\" fill=\"none\" stroke=\"#FF8E3D\" strokeWidth={props.strokeWidth ? props.strokeWidth + \"px\" : \"1px\"} />\n</svg>);\n\nconst BorderBottom = props => {\n\treturn <svg width=\"100%\" viewBox=\"0 0 1199 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M0 0L38 38L1198.5 38L1198.5 0\" fill=\"none\" stroke=\"#FF8E3D\" strokeWidth={props.strokeWidth ? props.strokeWidth + \"px\" : \"1px\"} />\n\t</svg>\n};\n\nexport const BorderedContainer = props => {\n\treturn <div className={styles.borderedContainer}>\n\t\t<div className={styles.titleBar}>\n\t\t\t<div className={styles.forgeBG}>\n\t\t\t\t<BorderTop strokeWidth={props.strokeWidth} />\n\t\t\t</div>\n\n\t\t\t{props.titleBarContent}\n\t\t</div>\n\n\t\t<div className={styles.contentContainer}>\n\t\t\t{props.children}\n\t\t</div>\n\n\t\t<div className={styles.footBar}>\n\t\t\t<div className={styles.forgeBG}>\n\t\t\t\t<BorderBottom strokeWidth={props.strokeWidth} />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n};","import React, { useState } from 'react'\nimport classNames from 'classnames'\nimport { Modal } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next'\nimport modalClose_icon from '../../images/freshBank/nft/modalClose_icon.svg'\nimport { globalUtils } from '../../utils/globalUtils'\nimport { NFTController } from './NFTController'\n\nconst NftForgeModal = props => {\n  const styles = props.styles\n  const { t } = useTranslation();\n\n  const burnHandle = () => {\n    props.handleClose(props.forgeStatus);\n  }\n\n  const showForgingPanel = <div>\n    <img src='/images/forging.gif' />\n  </div>;\n\n  const showForgingDone = <div>\n    <img src='/images/done.svg' />\n    <div className={styles.modalHeader2}>{t(\"forgingSucceed\")}</div>\n    <div className={styles.modalTips}>{t(\"forgeingCongratulations\", { rarity: NFTController.nftForged })}</div>\n  </div>;\n\n  const showForgingError = <div>\n    <img src='/images/error.svg' />\n    <div className={styles.modalHeader2}>{t(\"forgingFailed\")}</div>\n    <div className={styles.modalTips}>{t(\"forgingFailedDescription\")}</div>\n  </div>;\n\n  const showForgingCannot = <div>\n    <img src='/images/error.svg' />\n    <div className={styles.modalHeader2}>{t(\"forgingFailed\")}</div>\n    <div className={styles.modalTips}>{t(\"forgingFailedInsufficient\")}</div>\n  </div>;\n\n  const showContent = () => {\n    let com = null;\n\n    switch (props.forgeStatus) {\n      case globalUtils.ForgeStatus.DONE:\n        com = showForgingDone;\n        break;\n\n      case globalUtils.ForgeStatus.ERROR:\n        com = showForgingError;\n        break;\n\n      case globalUtils.ForgeStatus.CANNOT:\n        com = showForgingCannot;\n        break;\n\n      default:\n        com = showForgingPanel;\n        break;\n    }\n\n    return com;\n  };\n\n  return (\n    <Modal\n      show={props.show}\n      onHide={props.handleClose}\n      className={classNames(styles.nftModal, styles.NftForgeModal)}\n      centered>\n      <Modal.Body>\n        <div className={classNames(styles.bodyContainer)}>\n          <div className={classNames(styles.bodyBg)}>\n            <div className={styles.bodyStoke}>\n              <div className={styles.hd}>\n                <span className={styles.title}>{t(\"forge\")}</span>\n\n                <div className={styles.close} onClick={props.handleClose}>\n                  <img src={modalClose_icon} />\n                </div>\n              </div>\n\n              <div className={styles.bodyContent}>\n                {showContent()}\n              </div>\n\n              <div className={styles.ft} style={{ marginTop: \"3em\" }}>\n                {props.forgeStatus === globalUtils.ForgeStatus.CANNOT ? (\n                  <a href=\"https://app.mojitoswap.finance/nfts/collections/0x6d6a72741E3A413B98fEbB4D328eE86093eD7CE0\" target=\"_blank\" className={styles.buy}>\n                    {t('NFT.BuyOnMojitoSwap')}\n                  </a>\n                ) : (<button onClick={burnHandle}>\n                  {t(\"ok\")}\n                </button>)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\n\n\nexport default NftForgeModal","import React, { useEffect } from \"react\";\nimport styles from \"./InfiniteList.module.scss\";\n\nlet infiniteListTimer = null;\nlet infiniteListStartTop = 0;\nlet infiniteListContainer = null;\nlet infiniteListContent = null;\nlet InfiniteListItemHeight = 0;\n\nexport const InfiniteList = props => {\n\tconst scorll = () => {\n\t\tinfiniteListContent.className = styles.content;\n\t\tinfiniteListStartTop -= InfiniteListItemHeight;\n\t\tinfiniteListContent.style.top = infiniteListStartTop + \"px\";\n\n\t\tif (infiniteListStartTop < -(infiniteListContent.offsetHeight - infiniteListContainer.offsetHeight)) {\n\t\t\tconst r = infiniteListContent.childNodes[0].cloneNode(true);\n\t\t\tinfiniteListContent.appendChild(r)\n\t\t}\n\n\t\tif (infiniteListStartTop < -infiniteListContent.childNodes[0].offsetHeight) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tinfiniteListContent.className = styles.contentWithoutTransation;\n\t\t\t\tinfiniteListContent.removeChild(infiniteListContent.childNodes[0]);\n\t\t\t\tinfiniteListStartTop = -InfiniteListItemHeight;\n\t\t\t\tinfiniteListContent.style.top = infiniteListStartTop + \"px\";\n\t\t\t}, 1000);\n\t\t}\n\t};\n\n\tconst destroyTimer = () => {\n\t\twindow.clearInterval(infiniteListTimer);\n\t\tinfiniteListTimer = null;\n\t};\n\n\tuseEffect(() => {\n\t\tif (!props.scroll) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (infiniteListTimer) {\n\t\t\tdestroyTimer();\n\t\t}\n\n\t\tinfiniteListContainer = document.getElementById(\"infiniteListContainer\");\n\t\tinfiniteListContent = document.getElementById(\"infiniteListContent\");\n\t\tInfiniteListItemHeight = infiniteListContent.offsetHeight / props.length;\n\n\t\tinfiniteListTimer = setInterval(scorll, props.interval ?? 2000);\n\n\t\treturn () => {\n\t\t\tdestroyTimer();\n\t\t}\n\t}, []);\n\n\treturn <div\n\t\tid=\"infiniteListContainer\"\n\t\tclassName={styles.infiniteListLayout}>\n\t\t<div\n\t\t\tid=\"infiniteListContent\"\n\t\t\tclassName={styles.content}>{props.children}</div>\n\t</div>\n};","import React, { useContext, useEffect, useState } from 'react'\nimport classNames from 'classnames'\nimport { Container, Collapse, Spinner } from 'react-bootstrap'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { WalletAddressContext, NetworkTypeContext, Web3Context, ReadonlyWeb3Context, WalletModalContext, LanguageContext } from '../../context'\nimport { TorToast } from \"../../components/littleComponents\";\nimport Loading from '../../images/freshBank/loading.svg';\nimport { roadMapData, faqListData, galleryData, recordsData, StepStatus, NFTLevel } from './nftData'\nimport galleryPic1 from '../../images/freshBank/nft/galleryPic1.gif'\nimport galleryPic2 from '../../images/freshBank/nft/galleryPic2.gif'\nimport galleryPic3 from '../../images/freshBank/nft/galleryPic3.gif'\nimport legendaryIcon from '../../images/freshBank/nft/legendary_icon.svg'\nimport epicIcon from '../../images/freshBank/nft/epic_icon.svg'\nimport normalIcon from '../../images/freshBank/nft/normal_icon.svg'\nimport arrowIcon from '../../images/freshBank/nft/arrow_icon.svg'\nimport goLinkIcon from '../../images/freshBank/nft/goLink_icon.svg'\nimport { AiOutlinePlus } from \"@react-icons/all-files/ai/AiOutlinePlus\"\nimport { AiOutlineMinus } from \"@react-icons/all-files/ai/AiOutlineMinus\"\nimport NonWhitelistModal from './nonWhitelistModal'\nimport GalleryIntroModal from './galleryIntroModal'\nimport NftBurnModal from './NftBurnModal'\nimport styles from './nft.module.scss'\nimport { NFTController } from './NFTController'\nimport torchlight from '../../images/freshBank/nft/torchlight.gif'\nimport { globalUtils } from '../../utils/globalUtils'\nimport warn_icon from '../../images/freshBank/nft/warn_icon.svg'\nimport add_icon from '../../images/freshBank/nft/add_icon.svg'\nimport Config from '../../utils/config'\nimport { BorderedContainer } from './BorderedContainer/BorderedContainer'\nimport NftForgeModal from './NftForgeModal'\nimport truncateMiddle from 'truncate-middle'\nimport { InfiniteList } from '../../components/infiniteList/InfiniteList'\n\nconst NFT = (props) => {\n  const { language } = useContext(LanguageContext)\n  const { connectedAddress } = useContext(WalletAddressContext)\n  const { networkType } = useContext(NetworkTypeContext)\n  const { web3, readonlyWeb3, hecoMainNetWeb3 } = useContext(Web3Context)\n  const { connectWalletModalShow, setConnectWalletModalShow } = useContext(WalletModalContext)\n  const { t, i18n } = useTranslation()\n  const [nowDate, setNowDate] = useState(null)\n  const initialTime = '00'\n  const [day, setDay] = useState(initialTime)\n  const [hour, setHour] = useState(initialTime)\n  const [minute, setMinute] = useState(initialTime)\n  const [second, setSecond] = useState(initialTime)\n  const [expandStatus, setExpandStatus] = useState([]);\n  const [isWhitelist, setIsWhitelist] = useState(false); // 白名单\n  const [mintFinished, setMintFinished] = useState(false); // 第二阶段 7.15开启\n  const [showMojitoSwap, setShowMojitoSwap] = useState(false); // 7.11显示\n  const [showMintFailedModal, setShowMintFailedModal] = useState(false) // mint failed 弹窗(非白名单显示弹窗)\n  const [showGalleryIntroModal, setShowGalleryIntroModal] = useState(false) // gallery 弹窗\n  const [showNftBurnModal, setShowNftBurnModal] = useState(false) // nft燃烧弹窗\n  const [showNftForgeModal, setShowNftForgeModal] = useState(false);\n  const [forging, setForging] = useState(false);\n  const [forgeStatus, setForgeStatus] = useState(globalUtils.ForgeStatus.IDLE);\n  const [galleryModalData, setGalleryModalData] = useState(0) //gallery弹窗的数据，默认为0\n  const [tokenIDs, setTokenIDs] = useState([]);\n  const [balanceOf, setBalanceOf] = useState(0);\n  const [countMinted, setCountMinted] = useState(0);\n  const [NFTs, setNFTs] = useState(null);\n  const [groupedNFTs, setGroupedNFTs] = useState({\n    Rare: [],\n    Legendary: [],\n    Epic: []\n  });\n  const [mintSuccess, setMintSuccess] = useState(false);\n  const [mintFailed, setMintFailed] = useState(false);\n  const [countWhiteList, setCountWhiteList] = useState(0);\n  const [roundToBoost, setRoundToBoost] = useState(0);\n  const [records, setRecords] = useState([]);\n  const [forgingLogsToShow, setForgingLogsToShow] = useState([]);\n\n  const endDate = new Date('2022-07-15T00:00:00.000Z').getTime()\n  const buyMojitoSwapDate = new Date('2022-07-11T00:00:00.000Z').getTime()\n\n  let countDownTimer = null;\n\n  const fetchForgingLogs = () => {\n    NFTController.getForgingLogs(res => {\n      if (res) {\n        try {\n          let forgingLogs = [...res];\n          forgingLogs.map(item => {\n            item.level = Object.keys(NFTLevel)[item.level - 1];\n          });\n\n          setForgingLogsToShow(forgingLogs);\n        } catch (error) {\n          console.warn(error)\n        }\n      }\n    });\n  };\n\n  const init = async () => {\n    await NFTController.init(web3, networkType, connectedAddress);\n\n    setIsWhitelist(await isWhitelistUser(connectedAddress));\n    setBalanceOf(await NFTController.balanceOf(connectedAddress));\n    setTokenIDs(await NFTController.getTokenIDs(connectedAddress));\n    setCountMinted((await NFTController.getPastMintEvent()).length);\n    await NFTController.getNFTsBurned();\n    await NFTController.computeAllBoostMultiplier();\n    setRecords(recordsData());\n  };\n\n  useEffect(() => {\n    fetchForgingLogs();\n  }, []);\n\n  useEffect(() => {\n    if (!web3 || !networkType || !connectedAddress || connectedAddress === globalUtils.NA || networkType === \"unsupported\") {\n      return;\n    }\n\n    init();\n  }, [web3, networkType, connectedAddress]);\n\n  useEffect(() => {\n    if (balanceOf <= 0) {\n      return setNFTs(null);\n    }\n\n    const fetchURIs = async () => {\n      setNFTs(await NFTController.fetchURIs(balanceOf));\n    }\n\n    fetchURIs();\n  }, [balanceOf]);\n\n  useEffect(() => {\n    if (!NFTs) {\n      return;\n    }\n\n    const fetchJSON = async () => {\n      // await NFTController.fetchTokenJson(NFTs);\n      // setGroupedNFTs(NFTController.groupNFTsByLevel());\n      const sorted = [];\n      for (let item of NFTs) {\n        sorted.push(item);\n      }\n\n      for (let i = 0; i < sorted.length; i++) {\n        const result = await NFTController.fetchSingleTokenJson(sorted[i]);\n        try {\n          groupedNFTs[result.attributes[0]?.value].push(result);\n          setGroupedNFTs({ ...groupedNFTs });\n        } catch (error) {\n          console.warn(error);\n        }\n      }\n    };\n\n    fetchJSON();\n  }, [NFTs]);\n\n  useEffect(() => {\n    if (window.location.hash) {\n      scrollToAnchor(window.location.hash.slice(1))\n    }\n  }, [window.location.hash])\n\n  const countByLevel = level => {\n    if (groupedNFTs.length === 0) {\n      return 0\n    }\n\n    const group = groupedNFTs[level];\n    if (group) {\n      return group.length;\n    } else {\n      return 0;\n    }\n  };\n\n  useState(() => {\n    const countDownFn = () => {\n      const nowDate = new Date().getTime()\n\n      const diffTime = endDate - nowDate\n\n      if (diffTime <= 0) {\n        // 到期\n        setDay(initialTime)\n        setHour(initialTime)\n        setMinute(initialTime)\n        setSecond(initialTime)\n        setMintFinished(true)\n        clearInterval(countDownTimer)\n      } else {\n        const countDownSeconds = diffTime / 1000\n        const day = Math.floor(countDownSeconds / (60 * 60 * 24))\n        const hour = Math.floor(countDownSeconds / (60 * 60)) % 24\n        const minute = Math.floor(countDownSeconds / 60) % 60\n        const second = Math.floor(countDownSeconds) % 60\n        setNowDate(nowDate)\n        setDay(day.toString().padStart(2, '0'))\n        setHour(hour.toString().padStart(2, '0'))\n        setMinute(minute.toString().padStart(2, '0'))\n        setSecond(second.toString().padStart(2, '0'))\n        setMintFinished(false)\n      }\n\n      const diffBuyTime = buyMojitoSwapDate - nowDate\n      setShowMojitoSwap(diffBuyTime <= 0)\n    }\n\n    countDownTimer = setInterval(countDownFn, 1000)\n    countDownFn()\n\n    return () => {\n      clearInterval(countDownTimer)\n    }\n  }, [])\n\n\n  const faqExpandHandle = (index) => {\n    const newExpand = [...expandStatus]\n    newExpand[index] = newExpand[index] == null ? true : !newExpand[index]\n    setExpandStatus(newExpand)\n  }\n\n\n  const isConnectWallet = () => {\n    return connectedAddress && connectedAddress.toLowerCase() !== '0x0000000000000000000000000000000000000000'\n  }\n\n\n  // 是否是白名单用户\n  const isWhitelistUser = async () => {\n    const count = parseInt(await NFTController.verifyWhitelist(connectedAddress));\n    setCountWhiteList(count);\n    return count > 0;\n  };\n\n  const handleMint = event => {\n    NFTController.mint(\n      receipt => {\n        setMintSuccess(true)\n      },\n      (error, receipt) => {\n        if (error.code === 4001) {\n          // console.log('用户拒绝')\n        } else {\n          setMintFailed(true)\n        }\n      }\n    );\n  };\n\n  const handleBurn = mapToBurn => {\n    const IDs = [];\n    Array.from(mapToBurn).map(item => {\n      if (item[1] > 0) {\n        groupedNFTs[item[0]].slice(0, item[1]).map(nft => {\n          IDs.push(nft.tokenID);\n        });\n      }\n    });\n\n    NFTController.multiBurn(\n      IDs,\n      receipt => {\n        // NFTController.init(web3, networkType, connectedAddress);\n        // init();\n        window.location.reload();\n      },\n      (error, receipt) => { }\n    );\n  };\n\n  const handleAddWallet = async () => {\n    const tokenAddress = Config.torchlight.address[networkType];\n    const tokenSymbol = Config.torchlight.symbol;\n    const tokenDecimals = 0;\n    const tokenImage = 'https://www.torches.finance/favicon.png';\n\n    try {\n      // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n      const wasAdded = await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals, // The number of decimals in the token\n            image: tokenImage, // A string url of the token logo\n          },\n        },\n      });\n\n      if (wasAdded) {\n        console.log('Thanks for your interest!');\n      } else {\n        console.log('Your loss!');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  const scrollToAnchor = (anchorName) => {\n    if (anchorName) {\n      // 找到锚点\n      let anchorElement = document.getElementById(anchorName);\n      // 如果对应id的锚点存在，就跳转到锚点\n      if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\n    }\n  }\n\n  const handleConnectWallet = event => {\n    setConnectWalletModalShow(true);\n  };\n\n  // render UI \n  const renderMint = () => {\n    if (isConnectWallet()) {\n      if (!mintFinished) {\n        // 在第一阶段\n        if (isWhitelist) {\n          return <button className={styles.mint} onClick={handleMint}>{t('NFT.FreeMint')}</button> // 在白名单\n        } else if (balanceOf > 0) {\n          return <button className={styles.mint} disabled>{t(\"NFT.Minted\")}</button> // 已minted\n        } else {\n          return <button className={styles.mint} onClick={() => setShowMintFailedModal(true)}>{t('NFT.FreeMint')}</button>  // 不在白名单，显示弹窗\n        }\n      } else {\n        // 在第二阶段\n        return <a className={styles.mint} href=\"#gallery\">{t('NFT.CheckMyNFT')}</a>\n      }\n    } else {\n      return <button className={styles.mint} onClick={handleConnectWallet}>{t('Header.ConnectWallet')}</button>\n    }\n\n  }\n\n  const renderWhiteListDesc = () => {\n    if (countWhiteList === 0 && balanceOf > 0 || mintFinished) {\n      return (\n        <Trans\n          i18nKey=\"youHaveMint\"\n          className={styles.desc1}\n          values={{ howMany: countMinted > 0 ? countMinted : balanceOf }} />\n      )\n    } else {\n      return (\n        <Trans\n          i18nKey=\"youCurrentlyHaveWhitelist\"\n          className={styles.desc1}\n          values={{ howMany: countWhiteList }} />\n      )\n    }\n  }\n\n  const renderCountDown = () => {\n    return (\n      <section className={styles.countDownContainer}>\n        <div className={styles.sloganBg}></div>\n        <h1 className={styles.slogan}>{t('NFT.Slogan')}</h1>\n        {\n          !mintFinished ? (\n            <div className={classNames(styles.stage, styles.stage1)}>\n              <div className={styles.desc}>{t('NFT.SloganDesc1')}</div>\n              <div className={styles.dountDown}>\n                <dl>\n                  <dd>{day}</dd>\n                  <dt>D</dt>\n                </dl>\n                <span className={styles.colon}>:</span>\n                <dl>\n                  <dd>{hour}</dd>\n                  <dt>H</dt>\n                </dl>\n                <span className={styles.colon}>:</span>\n                <dl>\n                  <dd>{minute}</dd>\n                  <dt>M</dt>\n                </dl>\n                <span className={styles.colon}>:</span>\n                <dl>\n                  <dd>{second}</dd>\n                  <dt>S</dt>\n                </dl>\n              </div>\n              {renderMint()}\n              {renderWhiteListDesc()}\n            </div>\n          ) : (\n            <div className={classNames(styles.stage, styles.stage2)}>\n              <div className={styles.desc}>{t('NFT.SloganDesc2')}</div>\n              {renderMint()}\n              {renderWhiteListDesc()}\n            </div>\n          )\n        }\n      </section>\n    )\n  }\n\n\n  const renderRoadMapAndAbout = () => {\n    const roadMap = () => {\n      return (\n        <div className={styles.roadMapContainer}>\n          <div className={styles.roadMapList}>\n            <div className={styles.line}></div>\n            {\n              roadMapData(t).map((item, index) => (\n                <div className={styles.roadMapItem} key={index}>\n                  <div className={styles.circle}></div>\n                  <div className={styles.subjectWrap}>\n                    <div className={styles.subject}>{item.title}</div>\n                    <div className={styles.subjectTime}>{item.time}</div>\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n      )\n    }\n\n    const about = () => {\n      return (\n        <div className={styles.aboutContainer}>\n          <h2 className={styles.titleWrap}>\n            <span className={styles.title}>{t('NFT.AboutTorchlight')}</span>\n            <span className={styles.titleStroke}>{t('NFT.AboutTorchlight')}</span>\n          </h2>\n          <div className={styles.aboutIntroContainer}>\n            <dl className={styles.introWrap}>\n              <dt>{t('NFT.Torchlight')}</dt>\n              <dd>\n                <p>{t('NFT.TorchlightIntro1')}</p>\n                <p>{t('NFT.TorchlightIntro2')}</p>\n              </dd>\n            </dl>\n            <div className={styles.picWrap}>\n              <div className={styles.picInner}>\n                <img src={torchlight} />\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n\n\n    const mintTips = () => {\n      return (\n        <div className={styles.mintTipsContainer}>\n          <div className={styles.mintTipsInner}>\n            <div className={styles.mintTips}>\n              <img src={warn_icon} />\n              <div className={styles.txtWrap}>\n                <Trans\n                  i18nKey=\"NFT.YouHaveMintTips1\"\n                  values={{ amount: countMinted > 0 ? countMinted : balanceOf }}\n                  className={styles.paragraph}\n                />\n                <div className={styles.paragraph}>\n                  {t('NFT.YouHaveMintTips2')}\n                </div>\n              </div>\n            </div>\n            <button className={styles.torchlightAddWallet} onClick={handleAddWallet}>\n              <span>{t('NFT.TorchlightAddWallet')}</span>\n              <img src={add_icon} />\n            </button>\n          </div>\n        </div>\n      )\n    }\n\n    return (\n      <section className={styles.roadMapAndAboutContainer}>\n        {roadMap()}\n        {about()}\n        {balanceOf > 0 && mintTips()}\n      </section>\n    )\n  }\n\n  const renderWire = () => {\n    return (\n      <div className={classNames(styles.wireWrap)}>\n        <div className={styles.wire}></div>\n        <div className={styles.wire}></div>\n        <div className={styles.wire}></div>\n        <div className={styles.wire}></div>\n      </div>\n    )\n  }\n\n  const renderGallery = () => {\n    return (\n      <div id=\"gallery\" className={styles.galleryContainer}>\n        <div className={classNames(styles.inner, styles.galleryInner)}>\n          {/* {renderWire()} */}\n          <h2 className={styles.titleWrap}>\n            <span className={styles.title}>{t('NFT.Gallery')}</span>\n            <span className={styles.titleStroke}>{t('NFT.Gallery')}</span>\n          </h2>\n          {\n            showMojitoSwap && (\n              <a href=\"https://app.mojitoswap.finance/nfts/collections/0x6d6a72741E3A413B98fEbB4D328eE86093eD7CE0\" target=\"_blank\" className={styles.buy}>\n                <span>{t('NFT.BuyOnMojitoSwap')}</span>\n                <img src={goLinkIcon} />\n              </a>\n            )\n          }\n          <div className={classNames(styles.listWrap)}>\n            {\n              galleryData.map((item, index) => {\n                const owned = countByLevel(item.tag);\n\n                return (\n                  <div key={index} className={classNames(styles.itemWrapOuter, {\n                    [styles.itemWrapOuterPurple]: item.tag === 'Legendary',\n                    [styles.itemWrapOuterBlue]: item.tag === 'Epic',\n                    [styles.itemWrapOuterGreen]: item.tag === 'Rare',\n                    [styles.itemWrapOuterGrey]: isConnectWallet() && networkType !== \"unsupported\" && owned === 0\n                  })}>\n                    <div className={classNames(styles.itemWrap)}>\n                      <div className={styles.itemWrapInner}>\n                        {\n                          isConnectWallet() && networkType !== \"unsupported\" && (\n                            owned > 0 ? (<div className={styles.ownedNum}>\n                              {t('NFT.ownedX', { ownedNum: owned })}\n                            </div>) : (<div className={styles.ownedNum}>\n                              {t('NFT.NotOwned')}\n                            </div>)\n                          )\n                        }\n                        <div className={classNames(styles.galleryPicWrap)}>\n                          {\n                            item.tag === 'Legendary' ? (\n                              <img className={styles.galleryPic} src={galleryPic1} />\n                            ) : item.tag === 'Epic' ? (\n                              <img className={styles.galleryPic} src={galleryPic2} />\n                            ) : item.tag === 'Rare' ? (\n                              <img className={styles.galleryPic} src={galleryPic3} />\n                            ) : ''\n                          }\n                          <div className={styles.notOwned}>{t('NFT.NotOwned')}</div>\n                        </div>\n                        <div className={styles.itemInfo}>\n                          <div className={styles.tagWrap}>\n                            <div className={styles.pcs}>{t('NFT.Pcs', { num: item.pcs })}</div>\n                            {\n                              item.tag === 'Legendary' ? (\n                                <div className={classNames(styles.commonTag, styles.legendaryTag)}>\n                                  <img src={legendaryIcon} />\n                                  <span>{t('NFT.Legendary')}</span>\n                                </div>\n                              ) : item.tag === 'Epic' ? (\n                                <div className={classNames(styles.commonTag, styles.epicTag)}>\n                                  <img src={epicIcon} />\n                                  <span>{t('NFT.Epic')}</span>\n                                </div>\n                              ) : item.tag === 'Rare' ? (\n                                <div className={classNames(styles.commonTag, styles.normalTag)}>\n                                  <img src={normalIcon} />\n                                  <span>{t('NFT.Normal')}</span>\n                                </div>\n                              ) : ''\n                            }\n\n                            <div className={styles.topRewards}>\n                              {t('NFT.xTopRewards', {\n                                rewards: item.rewards\n                              })}\n                            </div>\n                          </div>\n                          <div className={styles.line}></div>\n                          <div className={styles.intro} onClick={() => {\n                            setShowGalleryIntroModal(true)\n                            setGalleryModalData(item)\n                          }}>\n                            <span>{t('NFT.Introduction')}</span>\n                            <img src={arrowIcon} />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const titleBarContent = <div className={styles.BorderedContainerTitleBarContent}>\n    <div className={styles.title}>\n      <span>{t(\"rulesForge\")}</span>\n      <span style={{ fontSize: \"smaller\" }}>&nbsp;&nbsp;▸&nbsp;▸&nbsp;▸&nbsp;▸</span>\n    </div>\n\n    <a href=\"https://app.mojitoswap.finance/nfts/collections/0x6d6a72741E3A413B98fEbB4D328eE86093eD7CE0\" target=\"_blank\" className={styles.buyMore}>\n      <span>{t('NFT.BuyOnMojitoSwap')}</span>\n      <img src={goLinkIcon} />\n    </a>\n  </div>\n\n  const handleForge = async event => {\n    const forgeFunc = async () => {\n      const tempArrayToForge = groupedNFTs[\"Rare\"].splice(0, 2);\n      setGroupedNFTs({ ...groupedNFTs });\n\n      const IDs = [];\n      tempArrayToForge.map(nft => {\n        IDs.push(nft.tokenID);\n      });\n\n      await NFTController.forge(\n        IDs,\n        null,\n        (er, re) => {\n          if (er.code === 4001) {\n            setForging(false);\n          } else {\n            setShowNftForgeModal(true);\n            setForgeStatus(globalUtils.ForgeStatus.ERROR);\n          }\n\n          groupedNFTs[\"Rare\"] = tempArrayToForge.concat(groupedNFTs[\"Rare\"]);\n          setGroupedNFTs({ ...groupedNFTs });\n        },\n        hash => {\n          NFTController.detectSynthesizerAPI(3000, hash, res => {\n            if (res) {\n              setForgeStatus(globalUtils.ForgeStatus.DONE);\n            } else {\n              setForgeStatus(globalUtils.ForgeStatus.ERROR);\n            }\n\n            setShowNftForgeModal(true);\n          });\n        }\n      );\n    };\n\n    if (groupedNFTs[\"Rare\"]?.length >= 2) {\n      setForging(true);\n\n      const approval = await NFTController.isApprovedForAll();\n      if (!approval) {\n        await NFTController.setApprovalForAll(\n          receipt => {\n            setTimeout(async () => {\n              await forgeFunc();\n            }, 3000);\n          },\n          (error, receipt) => {\n            if (error.code === 4001) {\n              setForging(false);\n            } else {\n              setShowNftForgeModal(true);\n              setForgeStatus(globalUtils.ForgeStatus.ERROR);\n            }\n          }\n        );\n      } else {\n        await forgeFunc();\n      }\n    } else {\n      setShowNftForgeModal(true);\n      setForgeStatus(globalUtils.ForgeStatus.CANNOT);\n    }\n  }\n\n  const renderForge = <>\n    {renderWire()}\n    <div id=\"gallery\" className={styles.forgeContainer}>\n      <div className={classNames(styles.inner, styles.galleryInner)}>\n\n        <h2 className={styles.titleWrap}>\n          <span className={styles.title}>{t(\"torchlightForge\")}</span>\n          <span className={styles.titleStroke}>{t(\"torchlightForge\")}</span>\n        </h2>\n      </div>\n\n      <div className={styles.forgeLayout}>\n        <BorderedContainer\n          strokeWidth={1}\n          titleBarContent={titleBarContent}>\n          <div className={styles.notificationBar}>{t(\"rulesForgeContent\")}</div>\n\n          <div className={styles.split} />\n\n          <div className={styles.contentContainer}>\n            <div>\n              <div className={styles.subContainer}>\n                <BorderedContainer strokeWidth={3}>\n                  <div className={styles.recentlyForge}>\n                    <div className={styles.title}>{t(\"forgingRecord\")}</div>\n\n                    {forgingLogsToShow.length === 0 && <div style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      height: \"90%\"\n                    }}>\n                      <img src={Loading} alt=\"loading\" style={{ width: \"2em\" }} />\n                    </div>}\n\n                    {forgingLogsToShow.length > 0 && <InfiniteList\n                      scroll={forgingLogsToShow.length > 5}\n                      length={forgingLogsToShow.length}>\n                      <div className={styles.list}>\n                        {forgingLogsToShow.map(forgingLog => {\n                          if (!forgingLog) {\n                            return;\n                          }\n\n                          return <div className={styles.listItem} key={forgingLog.hash}>\n                            <div className={styles.accountLabel}>{truncateMiddle(forgingLog.operator, 4, 4, \"...\")}</div>\n                            <div className={styles.itemLabel}>{t(\"forgingLog\", { rarity: forgingLog.level })}</div>\n                          </div>\n                        })}\n                      </div>\n                    </InfiniteList>}\n                  </div>\n                </BorderedContainer>\n              </div>\n\n              <div className={styles.subContainer}>\n                <BorderedContainer strokeWidth={3}>\n                  <div className={styles.launch}>\n                    <div>\n                      {forging ? (<>\n                        <img src='/images/forging.gif' />\n                        <div>{t(\"forging\")}</div>\n                      </>) : (isConnectWallet() && networkType !== \"unsupported\" ? <>\n                        <div>{t(\"clickForgeTo\")}</div>\n                        <button\n                          className={classNames(styles.btnAction, styles.normal)}\n                          onClick={handleForge}>{t(\"forge\")}</button>\n                      </> : <button\n                        className={styles.mint}\n                        onClick={handleConnectWallet}\n                        style={{ marginTop: \"-1em\" }}>{t('Header.ConnectWallet')}</button>)}\n                    </div>\n                  </div>\n                </BorderedContainer>\n              </div>\n            </div>\n          </div >\n        </BorderedContainer >\n      </div >\n    </div >\n  </>;\n\n  const renderFAQ = () => {\n\n    return (\n      <div className={styles.FaqContainer}>\n        <div className={classNames(styles.inner, styles.FaqInner)}>\n          {/* {renderWire()} */}\n          <h2 className={styles.titleWrap}>\n            <span className={styles.title}>{t('NFT.FAQ')}</span>\n            <span className={styles.titleStroke}>{t('NFT.FAQ')}</span>\n          </h2>\n          <div className={styles.faqList}>\n            {\n              faqListData(t).map((item, i) => {\n                return (\n                  <dl key={i} className={classNames(styles.faqItem)}>\n                    <dt onClick={() => faqExpandHandle(i)}>\n                      <span>{item.title}</span>\n                      {expandStatus[i] ? <AiOutlineMinus /> : <AiOutlinePlus />}\n                    </dt>\n                    <Collapse in={expandStatus[i]}>\n                      <dd>{item.content}</dd>\n                    </Collapse>\n                  </dl>\n                )\n              })\n            }\n            <a className={styles.viewFaq} href=\"https://docs.torches.finance/docs/guides/torchlight-nft\" target=\"_blank\">{t('NFT.ViewAllFAQs')}</a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n\n  const renderTopRewards = () => {\n    return (\n      <div className={styles.topRewardsContainer}>\n        <div className={classNames(styles.inner, styles.topRewardsInner)}>\n          {/* {renderWire()} */}\n          <h2 className={styles.titleWrap}>\n            <span className={styles.title}>{t('NFT.TopRewardsBoosting')}</span>\n            <span className={styles.titleStroke}>{t('NFT.TopRewardsBoosting')}</span>\n          </h2>\n          <div className={styles.tipsContainer}>\n            <div className={classNames(styles.tipsWrap, styles.joinTopWrap)}>\n              <div className={styles.tipsTitle}>{t('NFT.HowJoinTop')}</div>\n              <a href=\"https://medium.com/@TorchesFinance/how-to-get-top-rewards-and-boosting-your-mining-rate-f922ce8c1ed8\" target=\"_blank\" className={styles.tutorial}>\n                <span>{t('NFT.ViewTutorial')}</span>\n                <img src={goLinkIcon} />\n              </a>\n              <div className={styles.joinTopList}>\n                <div className={styles.joinTopItemOuter}>\n                  <div className={classNames(styles.joinTopItem, styles.joinTopItemYellow)}>\n                    <div className={styles.num}>1</div>\n                    <div className={styles.tips}>{t('NFT.HowJoinTop_step1')}</div>\n                    <div className={styles.verticalLine1}></div>\n                    <div className={styles.verticalLine2}></div>\n                  </div>\n                  <div className={styles.sNum}>S01</div>\n                </div>\n                <div className={styles.joinTopItemOuter}>\n                  <div className={classNames(styles.joinTopItem, styles.joinTopItemGreen)}>\n                    <div className={styles.num}>2</div>\n                    <div className={styles.tips}>{t('NFT.HowJoinTop_step2')}</div>\n                    <div className={styles.verticalLine1}></div>\n                    <div className={styles.verticalLine2}></div>\n                  </div>\n                  <div className={styles.sNum}>S02</div>\n                </div>\n                <div className={styles.joinTopItemOuter}>\n                  <div className={classNames(styles.joinTopItem, styles.joinTopItemBlue)}>\n                    <div className={styles.num}>3</div>\n                    <div className={styles.tips}>{t('NFT.HowJoinTop_step3')}</div>\n                    <div className={styles.verticalLine1}></div>\n                    <div className={styles.verticalLine2}></div>\n                  </div>\n                  <div className={styles.sNum}>S03</div>\n                </div>\n              </div>\n            </div>\n            <div className={classNames(styles.tipsWrap, styles.calMultWrap)}>\n              <div className={styles.tipsTitle}>{t('NFT.HowCaluBoosting')}</div>\n              <div className={styles.calMultList}>\n                <div className={classNames(styles.calMultItemOuter, styles.calMultItemOuterGreen)}>\n                  <div className={styles.lowerBg}></div>\n                  <div className={classNames(styles.num, styles.numGreen)}>01</div>\n                  <div className={styles.calMultItem}>\n                    <div className={classNames(styles.line, styles.line1)}></div>\n                    <div className={classNames(styles.line, styles.line2)}></div>\n                    <div className={classNames(styles.line, styles.shortLine1)}></div>\n                    <div className={classNames(styles.line, styles.shortLine2)}></div>\n                    <div className={styles.txt}>{t('NFT.HowCaluBoosting_step1')}</div>\n                  </div>\n                </div>\n                <div className={classNames(styles.calMultItemOuter, styles.calMultItemOuterYellow)}>\n                  <div className={styles.lowerBg}></div>\n                  <div className={classNames(styles.num, styles.numYellow)}>02</div>\n                  <div className={styles.calMultItem}>\n                    <div className={classNames(styles.line, styles.line1)}></div>\n                    <div className={classNames(styles.line, styles.line2)}></div>\n                    <div className={classNames(styles.line, styles.shortLine1)}></div>\n                    <div className={classNames(styles.line, styles.shortLine2)}></div>\n                    <div className={styles.txt}>{t('NFT.HowCaluBoosting_step2')}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const getActionTitle = step => {\n    let title = \"\";\n    switch (step.status) {\n      case StepStatus.past:\n        if (step.reward.gt(0)) {\n          title = t('NFT.Airdrop');\n        } else {\n          title = t('NFT.End');\n        }\n        break;\n\n      case StepStatus.now:\n        const now = new Date();\n        if (step.startBoost < now && now > step.stopBoost) {\n          title = t('NFT.OnBoosting');\n        } else {\n          title = t('NFT.BoostNow');\n        }\n        break;\n\n      default:\n        title = t('NFT.Waiting');\n        break;\n    }\n    return title;\n  };\n\n  const handleBoost = event => {\n    setRoundToBoost(records[parseInt(event.currentTarget.id)]);\n    setShowNftBurnModal(true);\n  };\n\n  const showBoostMultiplier = step => {\n    if (step.status === StepStatus.waiting) {\n      return \"-\";\n    } else {\n      return step.boostMultiplier.toLocaleString(\"en-US\", { maximumFractionDigits: 2 }) + \"x\";\n    }\n  };\n\n\n  const renderRecordsRow = () => {\n    return records.length > 0 ? records.map((item, index) => {\n      return (<tr key={index}>\n        <td>\n          <div className={styles.mobilTableRound}>{t('NFT.Round')}</div>\n          <div>{item.round}</div>\n        </td>\n\n        <td>\n          <div className={styles.mobilTableTh}>{t('NFT.burningDuration')}</div>\n          <div>\n            <span>{item.time}</span>\n            {(item.status === StepStatus.past || item.stopTime < nowDate) && <span className={styles.end}>{t('NFT.End')}</span>}\n          </div>\n        </td>\n\n        <td>\n          <div className={styles.mobilTableTh}>{t('NFT.boostingDuration')}</div>\n          <div>\n            <span>{item.boostTime}</span>\n          </div>\n        </td>\n\n        <td>\n          <div className={styles.mobilTableTh}>{t('NFT.BoostingMultiplier')}</div>\n          <div>{showBoostMultiplier(item)}</div>\n        </td>\n\n        <td>\n          <div className={styles.mobilTableTh}>{t('NFT.TopBoostingRewards')}</div>\n          <div>{item.reward.toNumber().toLocaleString(language, { maximumFractionDigits: 4, useGrouping: false })}</div>\n        </td>\n\n        <td>\n          <button\n            id={index}\n            className={classNames(styles.btnAction, {\n              [styles.past]: item.status === StepStatus.past,\n              [styles.now]: item.status === StepStatus.now,\n              [styles.waiting]: item.status === StepStatus.waiting,\n              // [styles.onBoosting]: item.burned?.length >= 2\n              [styles.onBoosting]: nowDate > item.startBoost && nowDate < item.stopBoost\n            })}\n            onClick={handleBoost}>\n            {getActionTitle(item)}\n          </button>\n        </td>\n      </tr>)\n    }) : (\n      <tr>\n        <td colSpan=\"5\" className={styles.alignCenter}>\n          <Spinner animation=\"border\" variant=\"success\" size=\"lg\" />\n        </td>\n      </tr>\n    )\n  }\n\n  const renderRecords = () => {\n    return (\n      <div className={styles.recordsContainer}>\n        <div className={styles.inner}>\n          <h2 className={styles.titleWrap}>\n            <span className={classNames(styles.title, styles.recordsTitle)}>{t('NFT.Records')}</span>\n            <span className={styles.titleStroke}>{t('NFT.Records')}</span>\n          </h2>\n          <div className={styles.recordsTableOuter}>\n            <table className={styles.recordsTable}>\n              <thead>\n                <tr>\n                  <th><span>{t('NFT.Round')}</span></th>\n                  <th><span>{t('NFT.burningDuration')}</span></th>\n                  <th><span>{t('NFT.boostingDuration')}</span></th>\n                  <th><span>{t('NFT.BoostingMultiplier')}</span></th>\n                  <th><span>{t('NFT.TopBoostingRewards')}</span></th>\n                  <th><span>{t('NFT.Action')}</span></th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {isConnectWallet() && networkType !== \"unsupported\" ? renderRecordsRow() : (\n                  <tr>\n                    <td colSpan=\"5\" className={classNames(styles.alignCenter)}>\n                      <button className={styles.mint} onClick={handleConnectWallet}>{t('Header.ConnectWallet')}</button>\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div >\n    )\n  }\n\n  const handleCloseForgeModal = forgeResult => {\n    if (forgeResult === globalUtils.ForgeStatus.DONE) {\n      window.location.reload();\n    } else {\n      setShowNftForgeModal(false);\n      setForging(false);\n    }\n  };\n\n  // render UI\n  return (\n    <div className={styles.nftContainer}>\n      {renderCountDown()}\n      <div className={styles.container}>\n        {renderRoadMapAndAbout()}\n        {renderGallery()}\n        {renderForge}\n\n        {/* 第二阶段显示 */}\n        {mintFinished && (\n          <div id=\"topRewards\" className={styles.stage2Container}>\n            {renderTopRewards()}\n            {renderRecords()}\n          </div>\n        )}\n        {renderFAQ()}\n      </div>\n      {\n        showMintFailedModal && (\n          <NonWhitelistModal\n            styles={styles}\n            showMojitoSwap={showMojitoSwap}\n            show={showMintFailedModal}\n            handleClose={() => setShowMintFailedModal(false)}\n          />\n        )\n      }\n      {\n        showGalleryIntroModal && (\n          <GalleryIntroModal\n            styles={styles}\n            data={galleryModalData}\n            show={showGalleryIntroModal}\n            handleClose={() => setShowGalleryIntroModal(false)}\n          />\n        )\n      }\n\n      {showNftBurnModal && (<NftBurnModal\n        round={roundToBoost}\n        styles={styles}\n        show={showNftBurnModal}\n        data={groupedNFTs}\n        handleBurn={handleBurn}\n        handleClose={() => setShowNftBurnModal(false)}\n      />)}\n\n      {showNftForgeModal && <NftForgeModal\n        styles={styles}\n        show={showNftForgeModal}\n        forgeStatus={forgeStatus}\n        handleClose={handleCloseForgeModal} />}\n\n      <TorToast\n        type='success'\n        show={mintSuccess}\n        showMs={3000}\n        onClose={() => {\n          setMintSuccess(false);\n          init();\n        }}\n      >\n        {t('NFT.mintSuccess')}\n      </TorToast>\n\n      <TorToast\n        type='error'\n        show={mintFailed}\n        showMs={3000}\n        onClose={() => setMintFailed(false)}\n      >\n        {t('NFT.mintFailed')}\n      </TorToast>\n    </div>\n  )\n}\n\n\nexport default NFT"],"sourceRoot":""}
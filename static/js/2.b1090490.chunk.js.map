{"version":3,"sources":["utils/numberFormat.js","lib/VeTokenController.js"],"names":["formatBigNumber","num","decimals","isNaN","toNumber","toLocaleString","maximumFractionDigits","formatDecimalPlace","decimalPlace","reg","RegExp","test","toFixed","validateDecimal","decimalNum","VeTokenController","lastUpdate","multiCaller","networkType","web3","account","fildaContract","totalFildaSupply","globalUtils","ONE","mveBalance","zero","totalVeFildaSupply","currentVotePowerSum","currentVotingVeTokenSum","nextVotingVeTokenSum","nextEpochRewardRate","init","this","escrowContract","fildaPrice","currentEpochTime","nextEpochTime","currentRewardRate","previousEpoch","someData","FetchData","Date","getNextEpochTime","epochDuration","eq","duration","requestCurrentEpochTime","loadABI","config","veToken","rewardPolicyMaker","ABI","abi","contract","eth","Contract","address","Number","methods","epoch_start_time","currentEpoch","call","BigNumber","rate_at","getFildaPrice","getGaugeData","tempData","Object","values","gauge","vault","generateCalls","parseResult","computeForGauge","generateCallsStep2","configData","gaugeController","gaugeControllerABI","gaugeABI","calls","d","push","reference","symbol","contractAddress","methodName","methodParameters","context","Array","from","length","reward_token_length","a","i","gaugeData","mintedCalls","underlying","lpToken","priceOracle","network","voting_escrow","COMP","results","parseResultStep2","allResults","gaugeControllerResults","filter","item","originalContractCallContext","indexOf","gaugeResults","returns","find","callsReturnContext","theReturns","pickFromMultiCallResults","rewardTokens","rewardPolicyMakerResult","votingEscrowResult","totalSupply","mveFilDALocked","veFildaTotal","veTokenBalance","veFilDABalance","locked","amount","end","fildaResult","underlyingResults","lpTokenResults","priceOracleResults","theGaugeResult","theUnderlyingResult","theLPTokenResult","theOracleResult","underlyingPrice","price","shiftedBy","isExceeded","getTime","isLocked","gt","getCurrentLockUntil","getCurrentLockedAmount","totalBalance","balanceOf","multipliedBy","exchangeRateStored","voteUserSlopesPower","dividedBy","voteUserSlopesEnd","atCurrentEpoch","currentPointsWeight","plus","nextPointsWeight","weight","myBalance","balanceOf_Me","currentEpochRelativeWeight","nextEpochRelativeWeight","computerNextEpochGaugeApr","nextEpochGaugeApr","balance","rawBalance","totalStakeBalance","boost","userBoost","remainingBalance","computerUserRemainingStake","computerGaugeApr","APR","computerMyApr","myApr","apr","nextEpochApr","getFildaContract","erc20ABI","getEscrowContract","theABI","getFildaBalance","getAllowanceByEscrow","allowance","lock","amountToSend","selectedDate","callback","revertCallback","txCallback","create_lock","gas","gasLimit","max","runContractMethod","increaseAmount","increase_amount","increaseLock","increase_unlock_time","unlock","withdraw","approveFilda","console","log","approve","vote","theController","vote_for_gauge_weights","claim","theContract","claim_rewards","func","args","options","send","on","hash","confirmationNumber","receipt","error","rewardPrice","totalRewards","gaugeRewards","referenceBalance","referenceWorkingSupply","workingSupply","referenceLiquidityShare","providedLiquidity","liquidityShare","userAppliedLiquidityShare","rewards","nextEpochTotalRewards","nextEpochGaugeRewards","nextEpochRewards","userRemainingStake","totalVeTokenSupply","maxStake","denomination","value1","userLiquidityShare","value2","result","Math","min","userBoostForEstimation","stake","userLiquidityShareForEstimation","workingBalance","minimum","userAppliedBoost","workingBalances","veTokenForLock","endLockDate","lockDuration","DAY","now","setYear","getFullYear","calculatedBoost","project","applyBoost","user_checkpoint","getRewardTokens","gauges","forceReload","rewardCalls","map","token","index","contractABI","ERC20","reward","claimFilda","gaugeAddress","minter","mint","claimAll","gaugeAddresses","rewardHelper","claim_rewards_for","getPastLockEvent","getPastEvents","fromBlock","deployAt","toBlock","LiteralBlockNumber","LATEST","topics","deposit"],"mappings":"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","file":"static/js/2.b1090490.chunk.js","sourcesContent":["import { BigNumber } from 'bignumber.js'\r\n\r\nexport const formatBigNumber = (num, decimals) => {\r\n    if (isNaN(num) || num === null) {\r\n        return \"0\";\r\n    }\r\n\r\n    const n = (typeof num) === \"number\" ? num : num.toNumber();\r\n    return n.toLocaleString(\"en-US\", { maximumFractionDigits: decimals ?? 20 })\r\n}\r\n\r\nexport const formatDecimalNumber = (value) => {\r\n    const oldValue = new BigNumber(value);\r\n    if (oldValue.multipliedBy(100).abs() >= 1) {\r\n        return oldValue.toFixed(2, 1);\r\n    }\r\n    else if (oldValue.multipliedBy(100).abs() < 1 && oldValue.multipliedBy(10000).abs() >= 1) {\r\n        return oldValue.toFixed(4, 1);\r\n    }\r\n    else {\r\n        return oldValue.toString(10);\r\n    }\r\n}\r\n\r\nexport const formatBigNumberWithDecimals = (bigNumber, decimals, decimalPlace, toLocaleString) => {\r\n    if (!bigNumber) {\r\n        return\r\n    }\r\n\r\n    let dot = decimalPlace\r\n    // if (process.env.NODE_ENV === \"development\") {\r\n    //     dot = null\r\n    // }\r\n\r\n    if ((typeof bigNumber) === \"number\" || (typeof bigNumber) === \"string\") {\r\n        const n = new BigNumber(bigNumber).dividedBy(new BigNumber(10).pow(decimals))\r\n        if (toLocaleString) {\r\n            return n.toNumber().toLocaleString()\r\n        } else {\r\n            return n.toFixed(dot)\r\n        }\r\n    }\r\n\r\n    const n = bigNumber.dividedBy(new BigNumber(10).pow(decimals))\r\n    if (toLocaleString) {\r\n        return n.toNumber().toLocaleString()\r\n    } else {\r\n        return n.toFixed(dot)\r\n    }\r\n}\r\n\r\nexport const formatDecimalPlace = (num, decimalPlace = 4) => {\r\n    const reg = new RegExp('^(\\\\d)+(\\\\.(\\\\d){1,' + decimalPlace + '})?$')\r\n    return reg.test(num) ? num : num.toFixed(decimalPlace)\r\n}\r\n\r\n\r\n// 验证小数位数\r\nexport const validateDecimal = (decimalNum = 18) => new RegExp(\"^\\\\d*(\\\\.\\\\d{0,\" + decimalNum + \"})?$\")\r\n\r\n","import { BigNumber } from \"bignumber.js\"\nimport FetchData from \"../methods/FetchData\";\nimport config from \"../utils/config\";\nimport contractABI from '../utils/contractABI.json'\nimport { globalUtils } from \"../utils/globalUtils\";\n\nexport const VeTokenController = {\n\tlastUpdate: null,\n\tmultiCaller: null,\n\tnetworkType: \"\",\n\tweb3: null,\n\taccount: \"\",\n\tfildaContract: null,\n\ttotalFildaSupply: globalUtils.ONE,\n\tmveBalance: globalUtils.zero,\n\ttotalVeFildaSupply: globalUtils.zero,\n\tcurrentVotePowerSum: 0,\n\tcurrentVotingVeTokenSum: globalUtils.zero,\n\tnextVotingVeTokenSum: globalUtils.zero,\n\tnextEpochRewardRate: 0,\n\n\tinit: async function (networkType, web3, account) {\n\t\tthis.networkType = networkType;\n\t\tthis.web3 = web3;\n\t\tthis.account = account;\n\t\tthis.fildaContract = null;\n\t\tthis.escrowContract = null;\n\t\tthis.fildaPrice = -1;\n\t\tthis.currentEpochTime = 0;\n\t\tthis.nextEpochTime = 0;\n\t\tthis.currentRewardRate = 0;\n\t\tthis.nextEpochRewardRate = 0;\n\t\tthis.previousEpoch = 0;\n\t\tthis.someData = {};\n\t\tthis.currentVotePowerSum = 0;\n\t\tthis.currentVotingVeTokenSum = globalUtils.zero;\n\t\tthis.nextVotingVeTokenSum = globalUtils.zero;\n\t\tthis.multiCaller = FetchData.multiCaller(this.networkType, this.web3);\n\t\tthis.lastUpdate = new Date();\n\t},\n\tgetNextEpochTime: function () {\n\t\tif (this.currentEpochTime <= 0 || !this.epochDuration || this.epochDuration.eq(0)) {\n\t\t\treturn this.currentEpochTime;\n\t\t}\n\n\t\tconst duration = this.epochDuration.toNumber();\n\t\tthis.nextEpochTime = this.currentEpochTime + duration;\n\t\tthis.someData.nextEpochTime = this.nextEpochTime;\n\t\treturn this.nextEpochTime;\n\t},\n\trequestCurrentEpochTime: async function () {\n\t\tconst abi = await globalUtils.loadABI(config.veToken[this.networkType].rewardPolicyMaker.ABI);\n\t\tconst contract = new this.web3.eth.Contract(abi, config.veToken[this.networkType].rewardPolicyMaker.address);\n\t\tthis.currentEpochTime = Number(await contract.methods.epoch_start_time(this.currentEpoch.toFixed()).call());\n\t\tthis.currentRewardRate = BigNumber(await contract.methods.rate_at(this.currentEpochTime).call());\n\t\tthis.nextEpochRewardRate = BigNumber(await contract.methods.rate_at(this.getNextEpochTime()).call());\n\t},\n\tgetFildaPrice: async function () {\n\t\tif (this.fildaPrice === -1) {\n\t\t\tthis.fildaPrice = await FetchData.getFildaPrice(this.web3, this.networkType);\n\t\t}\n\t\treturn this.fildaPrice;\n\t},\n\tgetGaugeData: async function () {\n\t\tconst tempData = Object.values(config.veToken[this.networkType].gauge.vault);\n\n\t\tawait this.computeForGauge(this.parseResult(await this.call(await this.generateCalls(tempData))));\n\n\t\treturn tempData;\n\t},\n\tgenerateCallsStep2: async function (configData) {\n\t\tconst gaugeControllerABI = await globalUtils.loadABI(config.veToken[this.networkType].gaugeController.ABI);\n\t\tconst gaugeABI = await globalUtils.loadABI(config.veToken[this.networkType].gauge.ABI);\n\t\tconst calls = [];\n\n\t\tfor (let d of configData) {\n\t\t\tcalls.push({\n\t\t\t\treference: \"gaugeController_\" + d.symbol,\n\t\t\t\tcontractAddress: config.veToken[this.networkType].gaugeController.address,\n\t\t\t\tabi: gaugeControllerABI,\n\t\t\t\tcalls: [\n\t\t\t\t\t{ reference: \"get_gauge_weight_\" + d.symbol, methodName: \"get_gauge_weight\", methodParameters: [d.address] },\n\t\t\t\t\t{ reference: \"gauge_relative_weight_currentEpochTime_\" + d.symbol, methodName: \"gauge_relative_weight\", methodParameters: [d.address, this.currentEpochTime] },\n\t\t\t\t\t{ reference: \"gauge_relative_weight_nextEpochTime_\" + d.symbol, methodName: \"gauge_relative_weight\", methodParameters: [d.address, this.nextEpochTime] },\n\t\t\t\t\t{ reference: \"vote_user_slopes_\" + d.symbol, methodName: \"vote_user_slopes\", methodParameters: [this.account, d.address] },\n\t\t\t\t\t{ reference: \"points_weight_current_\" + d.symbol, methodName: \"points_weight\", methodParameters: [d.address, this.currentEpochTime] },\n\t\t\t\t\t{ reference: \"points_weight_next_\" + d.symbol, methodName: \"points_weight\", methodParameters: [d.address, this.nextEpochTime] }\n\t\t\t\t],\n\t\t\t\tcontext: { symbol: d.symbol }\n\t\t\t});\n\n\t\t\tcalls.push({\n\t\t\t\treference: \"gauge_\" + d.symbol,\n\t\t\t\tcontractAddress: d.address,\n\t\t\t\tabi: gaugeABI,\n\t\t\t\tcalls: Array.from({ length: d.reward_token_length.toNumber() }, (a, i) => {\n\t\t\t\t\treturn { reference: \"reward_tokens_\" + i, methodName: \"reward_tokens\", methodParameters: [i] }\n\t\t\t\t}),\n\t\t\t\tcontext: { symbol: d.symbol }\n\t\t\t});\n\t\t}\n\n\t\t// console.log(\"请求参数Step2\", calls);\n\t\treturn {\n\t\t\tcalls,\n\t\t\tgaugeData: configData\n\t\t};\n\t},\n\tgenerateCalls: async function (configData) {\n\t\tconst calls = [];\n\t\tconst mintedCalls = [];\n\n\t\tfor (let d of configData) {\n\t\t\tcalls.push({\n\t\t\t\treference: \"gauge_\" + d.symbol,\n\t\t\t\tcontractAddress: d.address,\n\t\t\t\tabi: await globalUtils.loadABI(config.veToken[this.networkType].gauge.ABI),\n\t\t\t\tcalls: [\n\t\t\t\t\t{ reference: \"workingSupply\", methodName: \"working_supply\" },\n\t\t\t\t\t{ reference: \"rawBalance\", methodName: \"balanceOf\", methodParameters: [this.account] },\n\t\t\t\t\t{ reference: \"workingBalances\", methodName: \"working_balances\", methodParameters: [this.account] },\n\t\t\t\t\t{ reference: \"claimable_tokens\", methodName: \"claimable_tokens\", methodParameters: [this.account] },\n\t\t\t\t\t{ reference: \"reward_token_length\", methodName: \"reward_token_length\" }\n\t\t\t\t],\n\t\t\t\tcontext: { symbol: d.symbol }\n\t\t\t});\n\n\t\t\tcalls.push({\n\t\t\t\treference: \"underlying_\" + d.symbol,\n\t\t\t\tcontractAddress: d.underlying.address,\n\t\t\t\tabi: d.underlying.ABI,\n\t\t\t\tcalls: [{ reference: \"balanceOf\", methodName: \"balanceOf\", methodParameters: [d.address] }],\n\t\t\t\tcontext: { symbol: d.symbol }\n\t\t\t});\n\n\t\t\tcalls.push({\n\t\t\t\treference: \"lpToken_\" + d.symbol,\n\t\t\t\tcontractAddress: d.lpToken.address,\n\t\t\t\tabi: d.lpToken.ABI,\n\t\t\t\tcalls: [\n\t\t\t\t\t{ reference: \"balanceOf\", methodName: \"balanceOf\", methodParameters: [d.address] },\n\t\t\t\t\t{ reference: \"balanceOf_Me\", methodName: \"balanceOf\", methodParameters: [this.account] },\n\t\t\t\t\t{ reference: \"exchangeRateStored\", methodName: \"exchangeRateStored\" }\n\t\t\t\t],\n\t\t\t\tcontext: { symbol: d.symbol }\n\t\t\t});\n\n\t\t\tcalls.push({\n\t\t\t\treference: \"priceOracle_\" + d.symbol,\n\t\t\t\tcontractAddress: config.priceOracle.network[this.networkType].address,\n\t\t\t\tabi: config.priceOracle.ABI,\n\t\t\t\tcalls: [{ reference: \"getUnderlyingPrice\", methodName: \"getUnderlyingPrice\", methodParameters: [d.lpToken.address] }],\n\t\t\t\tcontext: { symbol: d.symbol }\n\t\t\t});\n\n\t\t\tmintedCalls.push({ reference: d.symbol, methodName: \"claimable_reward\", methodParameters: [this.account, d.address] });\n\t\t}\n\n\t\tcalls.push({\n\t\t\treference: \"rewardPolicyMaker\",\n\t\t\tcontractAddress: config.veToken[this.networkType].rewardPolicyMaker.address,\n\t\t\tabi: await globalUtils.loadABI(config.veToken[this.networkType].rewardPolicyMaker.ABI),\n\t\t\tcalls: [\n\t\t\t\t{ reference: \"current_epoch\", methodName: \"current_epoch\" },\n\t\t\t\t{ reference: \"epoch_length\", methodName: \"epoch_length\" }\n\t\t\t],\n\t\t});\n\n\t\tcalls.push({\n\t\t\treference: \"voting_escrow\",\n\t\t\tcontractAddress: config.veToken[this.networkType].voting_escrow.address,\n\t\t\tabi: await globalUtils.loadABI(config.veToken[this.networkType].voting_escrow.ABI),\n\t\t\tcalls: [\n\t\t\t\t{ reference: \"balanceOf\", methodName: \"balanceOf\", methodParameters: [this.account] },\n\t\t\t\t{ reference: \"locked\", methodName: \"locked\", methodParameters: [this.account] },\n\t\t\t\t{ reference: \"totalSupply\", methodName: \"totalSupply\" },\n\t\t\t\t{ reference: \"supply\", methodName: \"supply\" },\n\t\t\t],\n\t\t});\n\n\t\tcalls.push({\n\t\t\treference: \"filda\",\n\t\t\tcontractAddress: config.COMP.network[this.networkType].address,\n\t\t\tabi: await globalUtils.loadABI(\"/abis/ERC20.json\"),\n\t\t\tcalls: [\n\t\t\t\t{ reference: \"totalSupply\", methodName: \"totalSupply\" },\n\t\t\t\t{ reference: \"mveBalanceOf\", methodName: \"balanceOf\", methodParameters: [config.veToken[this.networkType].voting_escrow.address] }\n\t\t\t],\n\t\t});\n\n\t\t// calls.push({\n\t\t// \treference: \"mveFilDA\",\n\t\t// \tcontractAddress: config.veToken[this.networkType].mveFilDA.address,\n\t\t// \tabi: config.veToken[this.networkType].mveFilDA.ABI,\n\t\t// \tcalls: [{ reference: \"totalSupply\", methodName: \"totalSupply\" }],\n\t\t// });\n\n\t\t// console.log(\"请求参数\", calls);\n\t\treturn {\n\t\t\tcalls,\n\t\t\tgaugeData: configData\n\t\t};\n\t},\n\tcall: async function ({ calls, gaugeData }) {\n\t\tconst results = await this.multiCaller.call(calls);\n\t\t// console.log(\"请求初步结果\", results);\n\t\treturn { results, gaugeData };\n\t},\n\tparseResultStep2: function ({ results, gaugeData }) {\n\t\tconst allResults = Object.values(results.results);\n\t\tconst gaugeControllerResults = allResults.filter(item => item.originalContractCallContext.reference.indexOf(\"gaugeController_\") === 0);\n\t\tconst gaugeResults = allResults.filter(item => item.originalContractCallContext.reference.indexOf(\"gauge_\") === 0);\n\n\t\tfor (let gauge of gaugeData) {\n\t\t\tconst theGaugeControlleResult = gaugeControllerResults.find(item => item.originalContractCallContext.context.symbol === gauge.symbol);\n\t\t\tlet returns = theGaugeControlleResult.callsReturnContext;\n\t\t\tgauge.gaugeController = {};\n\t\t\tfor (let theReturns of returns) {\n\t\t\t\tgauge.gaugeController[theReturns.reference] = FetchData.pickFromMultiCallResults(theReturns.methodName, returns, theReturns.reference);\n\t\t\t}\n\n\t\t\tconst theGaugeResult = gaugeResults.find(item => item.originalContractCallContext.context.symbol === gauge.symbol);\n\t\t\treturns = theGaugeResult.callsReturnContext\n\t\t\tgauge.rewardTokens = [];\n\t\t\tfor (let theReturns of returns) {\n\t\t\t\tgauge.rewardTokens.push({ address: FetchData.pickFromMultiCallResults(theReturns.methodName, returns, theReturns.reference) });\n\t\t\t}\n\t\t}\n\n\t\t// console.log(\"最终数据Step2 =\", gaugeData);\n\t\treturn gaugeData;\n\t},\n\tparseResult: function ({ results, gaugeData }) {\n\t\tconst allResults = Object.values(results.results);\n\n\t\tconst rewardPolicyMakerResult = allResults.filter(item => item.originalContractCallContext.reference === \"rewardPolicyMaker\")[0];\n\t\t// this.currentRewardRate = FetchData.pickFromMultiCallResults(\"rate_at\", rewardPolicyMakerResult.callsReturnContext, \"currentRewardRate\");\n\t\t// this.nextEpochRewardRate = FetchData.pickFromMultiCallResults(\"rate_at\", rewardPolicyMakerResult.callsReturnContext, \"nextEpochRewardRate\");\n\t\tthis.currentEpoch = FetchData.pickFromMultiCallResults(\"current_epoch\", rewardPolicyMakerResult.callsReturnContext, \"current_epoch\");\n\t\tthis.epochDuration = FetchData.pickFromMultiCallResults(\"epoch_length\", rewardPolicyMakerResult.callsReturnContext, \"epoch_length\");\n\t\tthis.someData.epochDuration = this.epochDuration;\n\n\t\tconst votingEscrowResult = allResults.filter(item => item.originalContractCallContext.reference === \"voting_escrow\")[0];\n\t\tthis.totalSupply = FetchData.pickFromMultiCallResults(\"totalSupply\", votingEscrowResult.callsReturnContext);\n\t\tthis.someData.mveFilDALocked = FetchData.pickFromMultiCallResults(\"supply\", votingEscrowResult.callsReturnContext);\n\t\tthis.someData.veFildaTotal = this.totalSupply;\n\t\tthis.veTokenBalance = FetchData.pickFromMultiCallResults(\"balanceOf\", votingEscrowResult.callsReturnContext);\n\t\tthis.someData.veFilDABalance = this.veTokenBalance;\n\n\t\tconst locked = FetchData.pickFromMultiCallResults(\"locked\", votingEscrowResult.callsReturnContext);\n\t\tthis.locked = {\n\t\t\tamount: locked[0],\n\t\t\tend: locked[1].toNumber()\n\t\t};\n\n\t\tconst fildaResult = allResults.filter(item => item.originalContractCallContext.reference === \"filda\")[0];\n\t\t// this.workingBalance = FetchData.pickFromMultiCallResults(\"balanceOf\", fildaResult.callsReturnContext, \"gaugeBalanceOf\");\n\t\t// this.myFildaBalance = FetchData.pickFromMultiCallResults(\"balanceOf\", fildaResult.callsReturnContext, \"myBalanceOf\");\n\t\tthis.totalFildaSupply = FetchData.pickFromMultiCallResults(\"totalSupply\", fildaResult.callsReturnContext, \"totalSupply\");\n\t\tthis.mveBalance = FetchData.pickFromMultiCallResults(\"balanceOf\", fildaResult.callsReturnContext, \"mveBalanceOf\");\n\n\t\t// const mveFilDAResult = allResults.filter(item => item.originalContractCallContext.reference === \"mveFilDA\")[0];\n\t\t// this.totalVeFildaSupply = FetchData.pickFromMultiCallResults(\"totalSupply\", mveFilDAResult.callsReturnContext, \"totalSupply\");\n\n\t\tconst gaugeResults = allResults.filter(item => item.originalContractCallContext.reference.indexOf(\"gauge_\") === 0);\n\t\tconst underlyingResults = allResults.filter(item => item.originalContractCallContext.reference.indexOf(\"underlying_\") === 0);\n\t\tconst lpTokenResults = allResults.filter(item => item.originalContractCallContext.reference.indexOf(\"lpToken_\") === 0);\n\t\t// const gaugeControllerResults = allResults.filter(item => item.originalContractCallContext.reference.indexOf(\"gaugeController_\") === 0);\n\t\tconst priceOracleResults = allResults.filter(item => item.originalContractCallContext.reference.indexOf(\"priceOracle_\") === 0);\n\t\t// const minterResults = allResults.filter(item => item.originalContractCallContext.reference === \"minter\")[0];\n\n\t\tfor (let gauge of gaugeData) {\n\t\t\tconst theGaugeResult = gaugeResults.find(item => item.originalContractCallContext.context.symbol === gauge.symbol);\n\t\t\tconst theUnderlyingResult = underlyingResults.find(item => item.originalContractCallContext.context.symbol === gauge.symbol);\n\t\t\tconst theLPTokenResult = lpTokenResults.find(item => item.originalContractCallContext.context.symbol === gauge.symbol);\n\t\t\t// const theGaugeControlleResult = gaugeControllerResults.find(item => item.originalContractCallContext.context.symbol === gauge.symbol);\n\t\t\tconst theOracleResult = priceOracleResults.find(item => item.originalContractCallContext.context.symbol === gauge.symbol);\n\n\t\t\tlet returns = theGaugeResult.callsReturnContext;\n\t\t\tfor (let theReturns of returns) {\n\t\t\t\tgauge[theReturns.reference] = FetchData.pickFromMultiCallResults(theReturns.methodName, returns, theReturns.reference);\n\t\t\t}\n\n\t\t\treturns = theUnderlyingResult.callsReturnContext;\n\t\t\tfor (let theReturns of returns) {\n\t\t\t\tgauge.underlying[theReturns.methodName] = FetchData.pickFromMultiCallResults(theReturns.methodName, returns, theReturns.reference);\n\t\t\t}\n\n\t\t\treturns = theLPTokenResult.callsReturnContext;\n\t\t\tfor (let theReturns of returns) {\n\t\t\t\tgauge.lpToken[theReturns.reference] = FetchData.pickFromMultiCallResults(theReturns.methodName, returns, theReturns.reference);\n\t\t\t}\n\n\t\t\treturns = theOracleResult.callsReturnContext;\n\t\t\tfor (let theReturns of returns) {\n\t\t\t\tgauge.lpToken.underlyingPrice = FetchData.pickFromMultiCallResults(theReturns.methodName, returns, theReturns.reference);\n\t\t\t\tgauge.lpToken.price = gauge.lpToken.underlyingPrice.shiftedBy(-(36 - gauge.underlying.decimals));\n\t\t\t}\n\n\t\t\t// returns = minterResults.callsReturnContext;\n\t\t\t// returns.map(item => {\n\t\t\t// \tif (item.reference === gauge.symbol) {\n\t\t\t// \t\tgauge.minted = FetchData.pickFromMultiCallResults(\"minted\", minterResults.callsReturnContext, gauge.symbol);\n\t\t\t// \t}\n\t\t\t// });\n\t\t}\n\n\t\t// console.log(\"最终数据 =\", gaugeData);\n\t\treturn gaugeData;\n\t},\n\tisExceeded: function () {\n\t\treturn !(this.locked && this.locked.end > new Date().getTime() / 1000);\n\t},\n\tisLocked: function () {\n\t\treturn this.locked && this.locked.amount.gt(0);\n\t},\n\tgetCurrentLockUntil: function () {\n\t\tif (this.locked) {\n\t\t\treturn new Date(this.locked.end * 1000);\n\t\t}\n\t},\n\tgetCurrentLockedAmount: function () {\n\t\tif (this.locked) {\n\t\t\treturn this.locked.amount;\n\t\t} else {\n\t\t\treturn globalUtils.zero;\n\t\t}\n\t},\n\tcomputeForGauge: async function (gaugeData) {\n\t\tif (this.currentEpoch != this.previousEpoch) {\n\t\t\tthis.previousEpoch = this.currentEpoch;\n\t\t\tawait this.requestCurrentEpochTime();\n\t\t}\n\n\t\tthis.parseResultStep2(await this.call(await this.generateCallsStep2(gaugeData)));\n\n\t\tfor (let gauge of gaugeData) {\n\t\t\tgauge.lpToken.totalBalance = gauge.lpToken.balanceOf.shiftedBy(-gauge.underlying.decimals).multipliedBy(gauge.lpToken.exchangeRateStored.shiftedBy(-18));\n\n\t\t\tgauge.gaugeController.voteUserSlopesPower = gauge.gaugeController[\"vote_user_slopes_\" + gauge.symbol][1].dividedBy(100).toNumber();\n\t\t\tthis.currentVotePowerSum += gauge.gaugeController.voteUserSlopesPower;\n\n\t\t\tgauge.gaugeController.voteUserSlopesEnd = new Date(gauge.gaugeController[\"vote_user_slopes_\" + gauge.symbol][2].toNumber() * 1000);\n\t\t\tgauge.gaugeController.atCurrentEpoch = gauge.gaugeController.voteUserSlopesEnd < this.nextEpochTime;\n\t\t\t// console.log(\"gauge.gaugeController.voteUserSlopesEnd =\", gauge.gaugeController.voteUserSlopesEnd.toString(), gauge.gaugeController.atCurrentEpoch)\n\n\t\t\tgauge.gaugeController.currentPointsWeight = gauge.gaugeController[\"points_weight_current_\" + gauge.symbol][0];\n\t\t\tthis.currentVotingVeTokenSum = this.currentVotingVeTokenSum.plus(gauge.gaugeController.currentPointsWeight);\n\t\t\t// console.log(gauge.symbol, \"current\", gauge.gaugeController.currentPointsWeight.toFixed());\n\n\t\t\tgauge.gaugeController.nextPointsWeight = gauge.gaugeController[\"points_weight_next_\" + gauge.symbol][0];\n\t\t\tthis.nextVotingVeTokenSum = this.nextVotingVeTokenSum.plus(gauge.gaugeController.nextPointsWeight);\n\t\t\t// console.log(gauge.symbol, \"next\", gauge.gaugeController.nextPointsWeight.toFixed());\n\n\t\t\tgauge.gaugeController.weight = gauge.gaugeController[\"get_gauge_weight_\" + gauge.symbol].shiftedBy(-18);\n\t\t\tgauge.lpToken.myBalance = gauge.lpToken.balanceOf_Me.shiftedBy(-gauge.underlying.decimals).multipliedBy(gauge.lpToken.exchangeRateStored.shiftedBy(-18));\n\t\t\tgauge.currentEpochRelativeWeight = gauge.gaugeController[\"gauge_relative_weight_currentEpochTime_\" + gauge.symbol].multipliedBy(100).shiftedBy(-18);\n\t\t\tgauge.nextEpochRelativeWeight = gauge.gaugeController[\"gauge_relative_weight_nextEpochTime_\" + gauge.symbol].multipliedBy(100).shiftedBy(-18);\n\t\t\tgauge.nextEpochGaugeApr = await this.computerNextEpochGaugeApr(gauge);\n\t\t\t// gauge.balance = gauge.underlying.balanceOf.shiftedBy(-gauge.underlying.decimals).multipliedBy(gauge.lpToken.exchangeRateStored.shiftedBy(-18));\n\t\t\tgauge.balance = gauge.rawBalance.shiftedBy(-gauge.underlying.decimals).multipliedBy(gauge.lpToken.exchangeRateStored.shiftedBy(-18));\n\t\t\tgauge.totalStakeBalance = gauge.lpToken.totalBalance;\n\t\t\tgauge.boost = this.userBoost(gauge, this.veTokenBalance, this.totalSupply);\n\t\t\tgauge.remainingBalance = this.computerUserRemainingStake(gauge);\n\t\t\tgauge.APR = await this.computerGaugeApr(gauge);\n\n\t\t\tconst myApr = await this.computerMyApr(gauge);\n\t\t\tgauge.apr = myApr[0];\n\t\t\tgauge.nextEpochApr = myApr[1];\n\t\t}\n\t},\n\tgetFildaContract: async function () {\n\t\tif (!this.fildaContract) {\n\t\t\tconst erc20ABI = await globalUtils.loadABI(\"/abis/ERC20.json\");\n\t\t\tthis.fildaContract = new this.web3.eth.Contract(erc20ABI, config.COMP.network[this.networkType].address);\n\t\t}\n\n\t\treturn this.fildaContract;\n\t},\n\tgetEscrowContract: async function () {\n\t\tif (!this.escrowContract) {\n\t\t\tconst theABI = await globalUtils.loadABI(\"/abis/voting_escrow.json\");\n\t\t\tthis.escrowContract = new this.web3.eth.Contract(theABI, config.veToken[this.networkType].voting_escrow.address);\n\t\t}\n\t\treturn this.escrowContract;\n\t},\n\tgetFildaBalance: async function () {\n\t\treturn new BigNumber(await (await this.getFildaContract()).methods.balanceOf(this.account).call());\n\t},\n\tgetAllowanceByEscrow: async function () {\n\t\treturn new BigNumber(await (await this.getFildaContract()).methods.allowance(this.account, config.veToken[this.networkType].voting_escrow.address).call());\n\t},\n\tlock: async function (amountToSend, selectedDate, callback, revertCallback, txCallback) {\n\t\treturn this.runContractMethod(\n\t\t\t(await this.getEscrowContract()).methods.create_lock,\n\t\t\t[amountToSend, selectedDate],\n\t\t\tcallback,\n\t\t\trevertCallback,\n\t\t\t{ gas: config.veToken[this.networkType].gasLimit.max },\n\t\t\ttxCallback\n\t\t);\n\t},\n\tincreaseAmount: async function (amountToSend, callback, revertCallback, txCallback) {\n\t\treturn this.runContractMethod(\n\t\t\t(await this.getEscrowContract()).methods.increase_amount,\n\t\t\t[amountToSend],\n\t\t\tcallback,\n\t\t\trevertCallback,\n\t\t\tnull,\n\t\t\ttxCallback\n\t\t);\n\t},\n\tincreaseLock: async function (selectedDate, callback, revertCallback, txCallback) {\n\t\treturn this.runContractMethod(\n\t\t\t(await this.getEscrowContract()).methods.increase_unlock_time,\n\t\t\t[selectedDate],\n\t\t\tcallback,\n\t\t\trevertCallback,\n\t\t\t{ gas: config.veToken[this.networkType].gasLimit.max },\n\t\t\ttxCallback\n\t\t);\n\t},\n\tunlock: async function (callback, revertCallback) {\n\t\treturn this.runContractMethod(\n\t\t\t(await this.getEscrowContract()).methods.withdraw,\n\t\t\t[],\n\t\t\tcallback,\n\t\t\trevertCallback,\n\t\t\t{ gas: config.veToken[this.networkType].gasLimit.max }\n\t\t);\n\t},\n\tapproveFilda: async function (callback, revertCallback, txCallback) {\n\t\tconsole.log(config.veToken[this.networkType].voting_escrow.address, globalUtils.max);\n\t\treturn this.runContractMethod(\n\t\t\t(await this.getFildaContract()).methods.approve,\n\t\t\t[config.veToken[this.networkType].voting_escrow.address, globalUtils.max],\n\t\t\tcallback,\n\t\t\trevertCallback,\n\t\t\tnull,\n\t\t\ttxCallback\n\t\t);\n\t},\n\tvote: async function (gauge, amountToSend, callback, revertCallback, txCallback) {\n\t\tconst theController = config.veToken[this.networkType].gaugeController;\n\t\tconst theABI = await globalUtils.loadABI(theController.ABI);\n\t\tconst contract = new this.web3.eth.Contract(theABI, theController.address);\n\t\treturn this.runContractMethod(\n\t\t\tcontract.methods.vote_for_gauge_weights,\n\t\t\t[gauge.address, amountToSend * 100],\n\t\t\tcallback,\n\t\t\trevertCallback,\n\t\t\t{ gas: config.veToken[this.networkType].gasLimit.max },\n\t\t\ttxCallback\n\t\t);\n\t},\n\tclaim: async function (gauge, callback, revertCallback) {\n\t\tconst theABI = await globalUtils.loadABI(config.veToken[this.networkType].gauge.ABI);\n\t\tconst theContract = new this.web3.eth.Contract(theABI, gauge.address);\n\t\treturn this.runContractMethod(\n\t\t\ttheContract.methods.claim_rewards,\n\t\t\t[],\n\t\t\tcallback,\n\t\t\trevertCallback\n\t\t);\n\t},\n\trunContractMethod: function (func, args, callback, revertCallback, options, txCallback) {\n\t\treturn func(...args).send({\n\t\t\tfrom: this.account,\n\t\t\t...options\n\t\t}).on('transactionHash', function (hash) {\n\t\t\tif (txCallback) {\n\t\t\t\treturn txCallback(hash);\n\t\t\t}\n\t\t}).on('confirmation', function (confirmationNumber, receipt) {\n\t\t\t// \n\t\t}).on('receipt', function (receipt) {\n\t\t\tif (callback) {\n\t\t\t\treturn callback(receipt);\n\t\t\t}\n\t\t}).on('error', function (error, receipt) {\n\t\t\tif (revertCallback) {\n\t\t\t\treturn revertCallback(error, receipt);\n\t\t\t}\n\t\t});\n\t},\n\tcomputerGaugeApr: async function (gauge) {\n\t\t// console.log(\"计算APR==============================\", gauge.symbol);\n\n\t\tconst rewardPrice = await this.getFildaPrice();\n\t\t// console.log(\"rewardPrice =\", rewardPrice);\n\n\t\t// console.log(\"this.currentRewardRate =\", this.currentRewardRate.toFixed());\n\t\tconst totalRewards = this.currentRewardRate.multipliedBy(365).multipliedBy(24).multipliedBy(3600).multipliedBy(rewardPrice).shiftedBy(-18);\n\t\t// console.log(\"totalRewards =\", totalRewards.toFixed());\n\n\t\tconst gaugeRewards = totalRewards.multipliedBy(gauge.currentEpochRelativeWeight).dividedBy(100);\n\t\t// console.log(\"gaugeRewards =\", gaugeRewards.toFixed());\n\n\t\tconst referenceBalance = new BigNumber(10000);\n\t\t// console.log(\"gauge.workingSupply =\", gauge.workingSupply.toFixed());\n\t\tconst referenceWorkingSupply = gauge.workingSupply.shiftedBy(-gauge.underlying.decimals).multipliedBy(gauge.lpToken.exchangeRateStored.shiftedBy(-18))\n\t\t// console.log(\"referenceWorkingSupply =\", referenceWorkingSupply.toFixed());\n\n\t\tconst referenceLiquidityShare = referenceBalance.dividedBy(referenceWorkingSupply.plus(referenceBalance));\n\t\t// console.log(\"referenceLiquidityShare =\", referenceLiquidityShare.toFixed());\n\n\t\tconst apr = gaugeRewards.multipliedBy(referenceLiquidityShare).multipliedBy(100).dividedBy(referenceBalance.multipliedBy(gauge.lpToken.price));\n\t\t// console.log(\"apr =\", apr.toFixed());\n\t\treturn apr;\n\t},\n\tcomputerMyApr: async function (gauge) {\n\t\t// console.log(\"计算apr==============================\", gauge.symbol);\n\n\t\tconst providedLiquidity = gauge.balance.multipliedBy(gauge.lpToken.price);\n\t\t// console.log(\"providedLiquidity =\", providedLiquidity.toFixed());\n\n\t\tif (providedLiquidity.gt(0)) {\n\t\t\tconst rewardPrice = await this.getFildaPrice();\n\t\t\t// console.log(\"rewardPrice =\", rewardPrice);\n\n\t\t\t// console.log(\"this.currentRewardRate =\", this.currentRewardRate.toFixed());\n\t\t\tconst totalRewards = this.currentRewardRate.multipliedBy(365).multipliedBy(24).multipliedBy(3600).multipliedBy(rewardPrice).shiftedBy(-18);\n\t\t\t// console.log(\"totalRewards =\", totalRewards.toFixed());\n\n\t\t\tconst gaugeRewards = totalRewards.multipliedBy(gauge.currentEpochRelativeWeight).dividedBy(100);\n\t\t\t// console.log(\"gaugeRewards =\", gaugeRewards.toFixed());\n\n\t\t\tconst liquidityShare = this.userAppliedLiquidityShare(gauge);\n\t\t\t// console.log(\"liquidityShare =\", liquidityShare.toFixed());\n\n\t\t\tconst rewards = gaugeRewards.multipliedBy(liquidityShare);\n\t\t\t// console.log(\"rewards =\", rewards.toFixed());\n\n\t\t\tconst myApr = rewards.multipliedBy(100).dividedBy(providedLiquidity);\n\t\t\t// console.log(\"myApr =\", myApr.toFixed());\n\n\t\t\tconst nextEpochTotalRewards = this.nextEpochRewardRate.multipliedBy(365).multipliedBy(24).multipliedBy(3600).multipliedBy(rewardPrice).shiftedBy(-18);\n\t\t\t// console.log(\"nextEpochTotalRewards =\", nextEpochTotalRewards.toFixed());\n\n\t\t\tconst nextEpochGaugeRewards = nextEpochTotalRewards.multipliedBy(gauge.nextEpochRelativeWeight).dividedBy(100);\n\t\t\t// console.log(\"nextEpochGaugeRewards =\", nextEpochGaugeRewards.toFixed());\n\n\t\t\tconst nextEpochRewards = nextEpochGaugeRewards.multipliedBy(liquidityShare);\n\t\t\t// console.log(\"nextEpochRewards =\", nextEpochRewards.toFixed());\n\n\t\t\tconst nextEpochApr = nextEpochRewards.multipliedBy(100).dividedBy(providedLiquidity);\n\t\t\t// console.log(\"nextEpochApr =\", nextEpochApr.toFixed());\n\n\t\t\treturn [myApr.toNumber(), nextEpochApr.toNumber()];\n\t\t} else {\n\t\t\treturn [0, 0];\n\t\t}\n\t},\n\tcomputerNextEpochGaugeApr: async function (gauge) {\n\t\t// console.log(\"计算NextEpochGaugeApr==============================\", gauge.symbol);\n\t\tconst rewardPrice = await this.getFildaPrice();\n\t\t// console.log(\"rewardPrice =\", rewardPrice);\n\n\t\t// console.log(\"this.nextEpochRewardRate =\", this.nextEpochRewardRate.toFixed());\n\t\tconst nextEpochTotalRewards = this.nextEpochRewardRate.multipliedBy(365).multipliedBy(24).multipliedBy(3600).multipliedBy(rewardPrice).shiftedBy(-18);\n\t\t// console.log(\"nextEpochTotalRewards =\", nextEpochTotalRewards.toFixed());\n\n\t\tconst nextEpochGaugeRewards = nextEpochTotalRewards.multipliedBy(gauge.nextEpochRelativeWeight).dividedBy(100);\n\t\t// console.log(\"nextEpochGaugeRewards =\", nextEpochGaugeRewards.toFixed());\n\n\t\tconst referenceBalance = new BigNumber(10000);\n\t\t// console.log(\"gauge.workingSupply =\", gauge.workingSupply.toFixed());\n\t\tconst referenceWorkingSupply = gauge.workingSupply.shiftedBy(-gauge.underlying.decimals).multipliedBy(gauge.lpToken.exchangeRateStored.shiftedBy(-18))\n\t\t// console.log(\"referenceWorkingSupply =\", referenceWorkingSupply.toFixed());\n\n\t\tconst referenceLiquidityShare = referenceBalance.dividedBy(referenceWorkingSupply.plus(referenceBalance));\n\t\t// console.log(\"referenceLiquidityShare =\", referenceLiquidityShare.toFixed());\n\n\t\tconst apr = nextEpochGaugeRewards.multipliedBy(referenceLiquidityShare).multipliedBy(100).dividedBy(referenceBalance.multipliedBy(gauge.lpToken.price));\n\t\t// console.log(\"apr =\", apr.toFixed());\n\t\treturn apr;\n\t},\n\tcomputerUserRemainingStake: function (gauge) {\n\t\treturn this.userRemainingStake(\n\t\t\tgauge.balance,\n\t\t\tgauge.totalStakeBalance,\n\t\t\tthis.veTokenBalance,\n\t\t\tthis.totalSupply,\n\t\t\tgauge.boost,\n\t\t);\n\t},\n\tuserRemainingStake: function (balance, totalBalance, veTokenBalance, totalVeTokenSupply, boost) {\n\t\tlet maxStake = (totalBalance * veTokenBalance) / totalVeTokenSupply;\n\t\tif (balance > maxStake) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif ((isNaN(boost) || boost === 0) && balance === 0) {\n\t\t\treturn maxStake;\n\t\t}\n\n\t\tconst denomination = (boost * 0.4) - balance;\n\t\tif (denomination === 0) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn maxStake / denomination;\n\t\t}\n\t},\n\tuserBoost: function (gauge, veTokenBalance, totalVeTokenSupply) {\n\t\tif (gauge.totalStakeBalance.eq(0)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst value1 = this.userLiquidityShare(gauge, gauge.balance, gauge.totalStakeBalance, veTokenBalance, totalVeTokenSupply);\n\t\tconst value2 = this.userLiquidityShare(gauge, gauge.balance, gauge.totalStakeBalance, 0, totalVeTokenSupply);\n\t\tlet result = Math.min(value1 / value2, 2.5);\n\n\t\tif (isNaN(result)) {\n\t\t\tresult = 0\n\t\t}\n\t\treturn result;\n\t},\n\tuserBoostForEstimation: function (gauge, stake, veTokenBalance, totalVeTokenSupply) {\n\t\tif (!gauge) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn Math.min(this.userLiquidityShareForEstimation(gauge, stake, veTokenBalance, totalVeTokenSupply.toNumber()) / this.userLiquidityShareForEstimation(gauge, stake, 0, totalVeTokenSupply.toNumber()), 2.5);\n\t},\n\tuserLiquidityShareForEstimation: function (gauge, balance, veTokenBalance, totalVeTokenSupply) {\n\t\tlet workingBalance = Math.min(\n\t\t\tbalance * 0.4 + ((gauge.totalStakeBalance + balance) * 0.6 * veTokenBalance) / (totalVeTokenSupply + veTokenBalance),\n\t\t\tbalance,\n\t\t);\n\n\t\tlet totalWorkingSupply = gauge.workingSupply.shiftedBy(-gauge.underlying.decimals).multipliedBy(gauge.lpToken.exchangeRateStored.shiftedBy(-18));\n\t\treturn (workingBalance * 100) / (totalWorkingSupply.toNumber() + workingBalance);\n\t},\n\tuserLiquidityShare: function (gauge, balance, totalBalance, veTokenBalance, totalVeTokenSupply) {\n\t\treturn BigNumber.minimum(balance.multipliedBy(0.4).plus(totalBalance.multipliedBy(0.6).multipliedBy(veTokenBalance).dividedBy(totalVeTokenSupply)), balance).multipliedBy(100).dividedBy(totalBalance);\n\t},\n\tuserAppliedBoost: function (gauge) {\n\t\tif (gauge.rawBalance.eq(0)) {\n\t\t\treturn globalUtils.zero;\n\t\t} else {\n\t\t\treturn gauge.workingBalances.multipliedBy(2.5).dividedBy(gauge.rawBalance);\n\t\t}\n\t},\n\tuserAppliedLiquidityShare: function (gauge) {\n\t\tif (gauge.workingSupply.eq(0)) {\n\t\t\treturn globalUtils.zero;\n\t\t} else {\n\t\t\treturn gauge.workingBalances.dividedBy(gauge.workingSupply);\n\t\t}\n\t},\n\tveTokenForLock: function (lock, endLockDate) {\n\t\tconst lockDuration = (endLockDate - new Date().getTime() / 1000) / globalUtils.DAY;\n\n\t\tconst now = new Date();\n\t\tnow.setYear(now.getFullYear() + 4);\n\t\tconst maxLockDuration = now.getTime() / 1000 / globalUtils.DAY;\n\n\t\tlet amount = (lock * lockDuration) / maxLockDuration;\n\n\t\treturn amount ? amount : 0;\n\t},\n\tcalculatedBoost: function (project, gauge, stake, lock, endLockDate) {\n\t\tconst veTokenForLock = this.veTokenForLock(lock, endLockDate);\n\n\t\tconst totalVeTokenSupply = this.totalSupply;\n\t\tif (totalVeTokenSupply.eq(0)) {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn this.userBoostForEstimation(gauge, stake, veTokenForLock, totalVeTokenSupply);\n\t},\n\tapplyBoost: async function (gauge, callback, revertCallback) {\n\t\tconst theABI = await globalUtils.loadABI(config.veToken[this.networkType].gauge.ABI);\n\t\tconst theContract = new this.web3.eth.Contract(theABI, gauge.address);\n\t\treturn this.runContractMethod(\n\t\t\ttheContract.methods.user_checkpoint,\n\t\t\t[this.account],\n\t\t\tcallback,\n\t\t\trevertCallback\n\t\t);\n\t},\n\n\tgetRewardTokens: async function (gauges, forceReload) {\n\t\tif (!gauges) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst calls = [];\n\t\tconst rewardCalls = [];\n\t\tconst gaugeABI = await globalUtils.loadABI(config.veToken[this.networkType].gauge.ABI);\n\n\t\tgauges.map(gauge => {\n\t\t\tif (gauge.rewardTokens?.length > 0 && (!gauge.rewardTokens[0].symbol || forceReload)) {\n\t\t\t\tgauge.rewardTokens.map((token, index) => {\n\t\t\t\t\tcalls.push({\n\t\t\t\t\t\treference: \"symbol.\" + index + \".\" + gauge.symbol,\n\t\t\t\t\t\tcontractAddress: token.address,\n\t\t\t\t\t\tabi: contractABI.ERC20,\n\t\t\t\t\t\tcalls: [\n\t\t\t\t\t\t\t{ reference: \"symbol\", methodName: \"symbol\" },\n\t\t\t\t\t\t\t{ reference: \"decimals\", methodName: \"decimals\" }\n\t\t\t\t\t\t],\n\t\t\t\t\t\tcontext: {\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tgauge: gauge.symbol\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\trewardCalls.push({\n\t\t\t\t\t\treference: \"claimable_reward.\" + index + \".\" + gauge.symbol,\n\t\t\t\t\t\tmethodName: \"claimable_reward_write\",\n\t\t\t\t\t\tmethodParameters: [this.account, token.address]\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcalls.push({\n\t\t\t\treference: \"rewards\",\n\t\t\t\tcontractAddress: gauge.address,\n\t\t\t\tabi: gaugeABI,\n\t\t\t\tcalls: rewardCalls\n\t\t\t});\n\t\t});\n\n\t\tconst results = await this.multiCaller.call(calls);\n\n\t\tgauges.map(gauge => {\n\t\t\tgauge.rewardTokens.map((token, index) => {\n\t\t\t\tconst returns = results.results[\"symbol.\" + index + \".\" + gauge.symbol].callsReturnContext\n\t\t\t\ttoken.symbol = FetchData.pickFromMultiCallResults(\"symbol\", returns);\n\t\t\t\ttoken.decimals = FetchData.pickFromMultiCallResults(\"decimals\", returns);\n\t\t\t\ttoken.reward = FetchData.pickFromMultiCallResults(\"claimable_reward_write\", results.results[\"rewards\"].callsReturnContext, \"claimable_reward.\" + index + \".\" + gauge.symbol);\n\t\t\t})\n\t\t});\n\t},\n\n\tclaimFilda: async function (gaugeAddress, callback, revertCallback) {\n\t\tconst theABI = await globalUtils.loadABI(config.veToken[this.networkType].minter.ABI);\n\t\tconst theContract = new this.web3.eth.Contract(theABI, config.veToken[this.networkType].minter.address);\n\t\treturn this.runContractMethod(\n\t\t\ttheContract.methods.mint,\n\t\t\t[gaugeAddress],\n\t\t\tcallback,\n\t\t\trevertCallback\n\t\t);\n\t},\n\n\tclaimAll: async function (gaugeAddresses, callback, revertCallback, txCallback) {\n\t\tconst theABI = await globalUtils.loadABI(config.veToken[this.networkType].rewardHelper.ABI);\n\t\tconst theContract = new this.web3.eth.Contract(theABI, config.veToken[this.networkType].rewardHelper.address);\n\t\treturn this.runContractMethod(\n\t\t\ttheContract.methods.claim_rewards_for,\n\t\t\t[this.account, gaugeAddresses],\n\t\t\tcallback,\n\t\t\trevertCallback,\n\t\t\tnull,\n\t\t\ttxCallback\n\t\t);\n\t},\n\n\tgetPastLockEvent: async function () {\n\t\ttry {\n\t\t\treturn (await this.getEscrowContract()).getPastEvents(\"Deposit\", {\n\t\t\t\tfromBlock: config.veToken[this.networkType].voting_escrow.deployAt,\n\t\t\t\ttoBlock: globalUtils.LiteralBlockNumber.LATEST,\n\t\t\t\ttopics: [config.veToken.topics.deposit]\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\treturn [];\n\t\t}\n\t}\n};"],"sourceRoot":""}